// Code generated by protoc-gen-go. DO NOT EDIT.
// source: discovery.proto

package discovery

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Node struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	RPCPort              uint32   `protobuf:"varint,3,opt,name=RPCPort,proto3" json:"RPCPort,omitempty"`
	RaftPort             uint32   `protobuf:"varint,4,opt,name=RaftPort,proto3" json:"RaftPort,omitempty"`
	SWIMPort             uint32   `protobuf:"varint,5,opt,name=SWIMPort,proto3" json:"SWIMPort,omitempty"`
	TorrentPort          uint32   `protobuf:"varint,6,opt,name=TorrentPort,proto3" json:"TorrentPort,omitempty"`
	DiscoveryPort        uint32   `protobuf:"varint,7,opt,name=DiscoveryPort,proto3" json:"DiscoveryPort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{0}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Node) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Node) GetRPCPort() uint32 {
	if m != nil {
		return m.RPCPort
	}
	return 0
}

func (m *Node) GetRaftPort() uint32 {
	if m != nil {
		return m.RaftPort
	}
	return 0
}

func (m *Node) GetSWIMPort() uint32 {
	if m != nil {
		return m.SWIMPort
	}
	return 0
}

func (m *Node) GetTorrentPort() uint32 {
	if m != nil {
		return m.TorrentPort
	}
	return 0
}

func (m *Node) GetDiscoveryPort() uint32 {
	if m != nil {
		return m.DiscoveryPort
	}
	return 0
}

type QuorumRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QuorumRequest) Reset()         { *m = QuorumRequest{} }
func (m *QuorumRequest) String() string { return proto.CompactTextString(m) }
func (*QuorumRequest) ProtoMessage()    {}
func (*QuorumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{1}
}

func (m *QuorumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuorumRequest.Unmarshal(m, b)
}
func (m *QuorumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuorumRequest.Marshal(b, m, deterministic)
}
func (m *QuorumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuorumRequest.Merge(m, src)
}
func (m *QuorumRequest) XXX_Size() int {
	return xxx_messageInfo_QuorumRequest.Size(m)
}
func (m *QuorumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QuorumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QuorumRequest proto.InternalMessageInfo

type QuorumResponse struct {
	Nodes                []*Node  `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QuorumResponse) Reset()         { *m = QuorumResponse{} }
func (m *QuorumResponse) String() string { return proto.CompactTextString(m) }
func (*QuorumResponse) ProtoMessage()    {}
func (*QuorumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{2}
}

func (m *QuorumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuorumResponse.Unmarshal(m, b)
}
func (m *QuorumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuorumResponse.Marshal(b, m, deterministic)
}
func (m *QuorumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuorumResponse.Merge(m, src)
}
func (m *QuorumResponse) XXX_Size() int {
	return xxx_messageInfo_QuorumResponse.Size(m)
}
func (m *QuorumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QuorumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QuorumResponse proto.InternalMessageInfo

func (m *QuorumResponse) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type AgentsRequest struct {
	// maximum number of nodes per page, defaults to 100.
	Maximum int64 `protobuf:"varint,1,opt,name=maximum,proto3" json:"maximum,omitempty"`
	// bloom filter to allow the agent to filter the results sent back.
	// because its lossy clients will still need to filter the results client side.
	// an empty array indicates send everything.
	Bloom                []byte   `protobuf:"bytes,2,opt,name=bloom,proto3" json:"bloom,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AgentsRequest) Reset()         { *m = AgentsRequest{} }
func (m *AgentsRequest) String() string { return proto.CompactTextString(m) }
func (*AgentsRequest) ProtoMessage()    {}
func (*AgentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{3}
}

func (m *AgentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentsRequest.Unmarshal(m, b)
}
func (m *AgentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentsRequest.Marshal(b, m, deterministic)
}
func (m *AgentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentsRequest.Merge(m, src)
}
func (m *AgentsRequest) XXX_Size() int {
	return xxx_messageInfo_AgentsRequest.Size(m)
}
func (m *AgentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AgentsRequest proto.InternalMessageInfo

func (m *AgentsRequest) GetMaximum() int64 {
	if m != nil {
		return m.Maximum
	}
	return 0
}

func (m *AgentsRequest) GetBloom() []byte {
	if m != nil {
		return m.Bloom
	}
	return nil
}

type AgentsResponse struct {
	Nodes                []*Node  `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AgentsResponse) Reset()         { *m = AgentsResponse{} }
func (m *AgentsResponse) String() string { return proto.CompactTextString(m) }
func (*AgentsResponse) ProtoMessage()    {}
func (*AgentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{4}
}

func (m *AgentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentsResponse.Unmarshal(m, b)
}
func (m *AgentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentsResponse.Marshal(b, m, deterministic)
}
func (m *AgentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentsResponse.Merge(m, src)
}
func (m *AgentsResponse) XXX_Size() int {
	return xxx_messageInfo_AgentsResponse.Size(m)
}
func (m *AgentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AgentsResponse proto.InternalMessageInfo

func (m *AgentsResponse) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type CheckRequest struct {
	Fingerprint          string   `protobuf:"bytes,1,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckRequest) Reset()         { *m = CheckRequest{} }
func (m *CheckRequest) String() string { return proto.CompactTextString(m) }
func (*CheckRequest) ProtoMessage()    {}
func (*CheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{5}
}

func (m *CheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckRequest.Unmarshal(m, b)
}
func (m *CheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckRequest.Marshal(b, m, deterministic)
}
func (m *CheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckRequest.Merge(m, src)
}
func (m *CheckRequest) XXX_Size() int {
	return xxx_messageInfo_CheckRequest.Size(m)
}
func (m *CheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckRequest proto.InternalMessageInfo

func (m *CheckRequest) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

type CheckResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckResponse) Reset()         { *m = CheckResponse{} }
func (m *CheckResponse) String() string { return proto.CompactTextString(m) }
func (*CheckResponse) ProtoMessage()    {}
func (*CheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{6}
}

func (m *CheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckResponse.Unmarshal(m, b)
}
func (m *CheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckResponse.Marshal(b, m, deterministic)
}
func (m *CheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckResponse.Merge(m, src)
}
func (m *CheckResponse) XXX_Size() int {
	return xxx_messageInfo_CheckResponse.Size(m)
}
func (m *CheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Node)(nil), "discovery.Node")
	proto.RegisterType((*QuorumRequest)(nil), "discovery.QuorumRequest")
	proto.RegisterType((*QuorumResponse)(nil), "discovery.QuorumResponse")
	proto.RegisterType((*AgentsRequest)(nil), "discovery.AgentsRequest")
	proto.RegisterType((*AgentsResponse)(nil), "discovery.AgentsResponse")
	proto.RegisterType((*CheckRequest)(nil), "discovery.CheckRequest")
	proto.RegisterType((*CheckResponse)(nil), "discovery.CheckResponse")
}

func init() { proto.RegisterFile("discovery.proto", fileDescriptor_1e7ff60feb39c8d0) }

var fileDescriptor_1e7ff60feb39c8d0 = []byte{
	// 366 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x4d, 0x4f, 0xea, 0x40,
	0x14, 0xa5, 0x40, 0xcb, 0xeb, 0x85, 0x42, 0x72, 0xf3, 0x92, 0xd7, 0xc7, 0xaa, 0x69, 0x34, 0x61,
	0x45, 0x08, 0x2e, 0xdc, 0x98, 0x10, 0x82, 0x1b, 0x16, 0x1a, 0x1c, 0x4d, 0x5c, 0xf3, 0x31, 0xc0,
	0x44, 0x3b, 0x53, 0xa7, 0x53, 0x23, 0xbf, 0xc2, 0x3f, 0xe5, 0x0f, 0x33, 0x9d, 0x61, 0xb0, 0x8d,
	0x6e, 0xdc, 0xf5, 0x9e, 0x33, 0xf7, 0x9c, 0x39, 0xa7, 0x03, 0xbd, 0x0d, 0xcb, 0xd6, 0xe2, 0x95,
	0xca, 0xc3, 0x30, 0x95, 0x42, 0x09, 0xf4, 0x4f, 0x40, 0xfc, 0xe1, 0x40, 0xf3, 0x56, 0x6c, 0x28,
	0x76, 0xa1, 0xce, 0xd2, 0xd0, 0x89, 0x9c, 0x81, 0x4f, 0xea, 0x2c, 0x45, 0x84, 0x26, 0x5f, 0x26,
	0x34, 0xac, 0x6b, 0x44, 0x7f, 0x63, 0x08, 0x2d, 0xb2, 0x98, 0x2d, 0x84, 0x54, 0x61, 0x23, 0x72,
	0x06, 0x01, 0xb1, 0x23, 0xf6, 0xe1, 0x0f, 0x59, 0x6e, 0x95, 0xa6, 0x9a, 0x9a, 0x3a, 0xcd, 0x05,
	0x77, 0xff, 0x38, 0xbf, 0xd1, 0x9c, 0x6b, 0x38, 0x3b, 0x63, 0x04, 0xed, 0x07, 0x21, 0x25, 0xe5,
	0x66, 0xd5, 0xd3, 0x74, 0x19, 0xc2, 0x33, 0x08, 0xae, 0xed, 0x6d, 0xf5, 0x99, 0x96, 0x3e, 0x53,
	0x05, 0xe3, 0x1e, 0x04, 0x77, 0xb9, 0x90, 0x79, 0x42, 0xe8, 0x4b, 0x4e, 0x33, 0x15, 0x5f, 0x42,
	0xd7, 0x02, 0x59, 0x2a, 0x78, 0x46, 0xf1, 0x1c, 0x5c, 0x2e, 0x36, 0x34, 0x0b, 0x9d, 0xa8, 0x31,
	0x68, 0x8f, 0x7b, 0xc3, 0xaf, 0x56, 0x8a, 0x02, 0x88, 0x61, 0xe3, 0x09, 0x04, 0xd3, 0x1d, 0xe5,
	0x2a, 0x3b, 0x2a, 0x15, 0xa1, 0x93, 0xe5, 0x1b, 0x4b, 0xf2, 0x44, 0xb7, 0xd3, 0x20, 0x76, 0xc4,
	0xbf, 0xe0, 0xae, 0x9e, 0x85, 0x48, 0x74, 0x47, 0x1d, 0x62, 0x86, 0xc2, 0xd9, 0x0a, 0xfc, 0xce,
	0x79, 0x04, 0x9d, 0xd9, 0x9e, 0xae, 0x9f, 0xac, 0x71, 0x04, 0xed, 0x2d, 0xe3, 0x3b, 0x2a, 0x53,
	0xc9, 0xb8, 0x3a, 0xfe, 0x9a, 0x32, 0x54, 0xa4, 0x3e, 0x6e, 0x18, 0xa7, 0xf1, 0xbb, 0x03, 0xfe,
	0xa9, 0x18, 0x9c, 0x80, 0x67, 0x3a, 0xc0, 0xb0, 0x64, 0x59, 0xe9, 0xa9, 0xff, 0xff, 0x07, 0xc6,
	0x88, 0xc5, 0x35, 0x9c, 0x82, 0x67, 0xa2, 0x54, 0x04, 0x2a, 0xf5, 0x54, 0x04, 0xaa, 0xb9, 0xe3,
	0xda, 0xc8, 0x19, 0xcf, 0xc1, 0x9f, 0xe6, 0x6a, 0x2f, 0x24, 0x53, 0x07, 0xbc, 0x02, 0x57, 0xdf,
	0x17, 0xff, 0x95, 0x96, 0xca, 0x99, 0xfb, 0xe1, 0x77, 0xc2, 0x8a, 0xad, 0x3c, 0xfd, 0x78, 0x2f,
	0x3e, 0x03, 0x00, 0x00, 0xff, 0xff, 0x93, 0x2c, 0x3d, 0x93, 0xcf, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DiscoveryClient is the client API for Discovery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiscoveryClient interface {
	Quorum(ctx context.Context, in *QuorumRequest, opts ...grpc.CallOption) (*QuorumResponse, error)
	Agents(ctx context.Context, in *AgentsRequest, opts ...grpc.CallOption) (Discovery_AgentsClient, error)
}

type discoveryClient struct {
	cc *grpc.ClientConn
}

func NewDiscoveryClient(cc *grpc.ClientConn) DiscoveryClient {
	return &discoveryClient{cc}
}

func (c *discoveryClient) Quorum(ctx context.Context, in *QuorumRequest, opts ...grpc.CallOption) (*QuorumResponse, error) {
	out := new(QuorumResponse)
	err := c.cc.Invoke(ctx, "/discovery.Discovery/Quorum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryClient) Agents(ctx context.Context, in *AgentsRequest, opts ...grpc.CallOption) (Discovery_AgentsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Discovery_serviceDesc.Streams[0], "/discovery.Discovery/Agents", opts...)
	if err != nil {
		return nil, err
	}
	x := &discoveryAgentsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Discovery_AgentsClient interface {
	Recv() (*AgentsResponse, error)
	grpc.ClientStream
}

type discoveryAgentsClient struct {
	grpc.ClientStream
}

func (x *discoveryAgentsClient) Recv() (*AgentsResponse, error) {
	m := new(AgentsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DiscoveryServer is the server API for Discovery service.
type DiscoveryServer interface {
	Quorum(context.Context, *QuorumRequest) (*QuorumResponse, error)
	Agents(*AgentsRequest, Discovery_AgentsServer) error
}

func RegisterDiscoveryServer(s *grpc.Server, srv DiscoveryServer) {
	s.RegisterService(&_Discovery_serviceDesc, srv)
}

func _Discovery_Quorum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QuorumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryServer).Quorum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/discovery.Discovery/Quorum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryServer).Quorum(ctx, req.(*QuorumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Discovery_Agents_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(AgentsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DiscoveryServer).Agents(m, &discoveryAgentsServer{stream})
}

type Discovery_AgentsServer interface {
	Send(*AgentsResponse) error
	grpc.ServerStream
}

type discoveryAgentsServer struct {
	grpc.ServerStream
}

func (x *discoveryAgentsServer) Send(m *AgentsResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Discovery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "discovery.Discovery",
	HandlerType: (*DiscoveryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Quorum",
			Handler:    _Discovery_Quorum_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Agents",
			Handler:       _Discovery_Agents_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "discovery.proto",
}

// AuthorityClient is the client API for Authority service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthorityClient interface {
	Check(ctx context.Context, in *CheckRequest, opts ...grpc.CallOption) (*CheckResponse, error)
}

type authorityClient struct {
	cc *grpc.ClientConn
}

func NewAuthorityClient(cc *grpc.ClientConn) AuthorityClient {
	return &authorityClient{cc}
}

func (c *authorityClient) Check(ctx context.Context, in *CheckRequest, opts ...grpc.CallOption) (*CheckResponse, error) {
	out := new(CheckResponse)
	err := c.cc.Invoke(ctx, "/discovery.Authority/Check", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthorityServer is the server API for Authority service.
type AuthorityServer interface {
	Check(context.Context, *CheckRequest) (*CheckResponse, error)
}

func RegisterAuthorityServer(s *grpc.Server, srv AuthorityServer) {
	s.RegisterService(&_Authority_serviceDesc, srv)
}

func _Authority_Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorityServer).Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/discovery.Authority/Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorityServer).Check(ctx, req.(*CheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Authority_serviceDesc = grpc.ServiceDesc{
	ServiceName: "discovery.Authority",
	HandlerType: (*AuthorityServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Check",
			Handler:    _Authority_Check_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "discovery.proto",
}
