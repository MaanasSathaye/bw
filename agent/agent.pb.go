// Code generated by protoc-gen-go. DO NOT EDIT.
// source: agent.proto

package agent

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Peer_State int32

const (
	Peer_Node   Peer_State = 0
	Peer_Client Peer_State = 2
	Peer_Gone   Peer_State = 3
)

var Peer_State_name = map[int32]string{
	0: "Node",
	2: "Client",
	3: "Gone",
}

var Peer_State_value = map[string]int32{
	"Node":   0,
	"Client": 2,
	"Gone":   3,
}

func (x Peer_State) String() string {
	return proto.EnumName(Peer_State_name, int32(x))
}

func (Peer_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{2, 0}
}

type Message_NodeEvent int32

const (
	Message_Joined   Message_NodeEvent = 0
	Message_Departed Message_NodeEvent = 1
)

var Message_NodeEvent_name = map[int32]string{
	0: "Joined",
	1: "Departed",
}

var Message_NodeEvent_value = map[string]int32{
	"Joined":   0,
	"Departed": 1,
}

func (x Message_NodeEvent) String() string {
	return proto.EnumName(Message_NodeEvent_name, int32(x))
}

func (Message_NodeEvent) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{5, 0}
}

type Message_Type int32

const (
	Message_PeerEvent           Message_Type = 0
	Message_LogEvent            Message_Type = 1
	Message_DeployCommandEvent  Message_Type = 2
	Message_DeployEvent         Message_Type = 3
	Message_PeersFoundEvent     Message_Type = 4
	Message_PeersCompletedEvent Message_Type = 5
	Message_TLSCAEvent          Message_Type = 6
)

var Message_Type_name = map[int32]string{
	0: "PeerEvent",
	1: "LogEvent",
	2: "DeployCommandEvent",
	3: "DeployEvent",
	4: "PeersFoundEvent",
	5: "PeersCompletedEvent",
	6: "TLSCAEvent",
}

var Message_Type_value = map[string]int32{
	"PeerEvent":           0,
	"LogEvent":            1,
	"DeployCommandEvent":  2,
	"DeployEvent":         3,
	"PeersFoundEvent":     4,
	"PeersCompletedEvent": 5,
	"TLSCAEvent":          6,
}

func (x Message_Type) String() string {
	return proto.EnumName(Message_Type_name, int32(x))
}

func (Message_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{5, 1}
}

type DeployCommand_Command int32

const (
	DeployCommand_Begin   DeployCommand_Command = 0
	DeployCommand_Cancel  DeployCommand_Command = 1
	DeployCommand_Done    DeployCommand_Command = 2
	DeployCommand_Failed  DeployCommand_Command = 3
	DeployCommand_Restart DeployCommand_Command = 4
)

var DeployCommand_Command_name = map[int32]string{
	0: "Begin",
	1: "Cancel",
	2: "Done",
	3: "Failed",
	4: "Restart",
}

var DeployCommand_Command_value = map[string]int32{
	"Begin":   0,
	"Cancel":  1,
	"Done":    2,
	"Failed":  3,
	"Restart": 4,
}

func (x DeployCommand_Command) String() string {
	return proto.EnumName(DeployCommand_Command_name, int32(x))
}

func (DeployCommand_Command) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{8, 0}
}

type Deploy_Stage int32

const (
	Deploy_Failed    Deploy_Stage = 0
	Deploy_Deploying Deploy_Stage = 1
	Deploy_Completed Deploy_Stage = 2
)

var Deploy_Stage_name = map[int32]string{
	0: "Failed",
	1: "Deploying",
	2: "Completed",
}

var Deploy_Stage_value = map[string]int32{
	"Failed":    0,
	"Deploying": 1,
	"Completed": 2,
}

func (x Deploy_Stage) String() string {
	return proto.EnumName(Deploy_Stage_name, int32(x))
}

func (Deploy_Stage) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{9, 0}
}

type InfoResponse_Mode int32

const (
	InfoResponse_None      InfoResponse_Mode = 0
	InfoResponse_Deploying InfoResponse_Mode = 1
)

var InfoResponse_Mode_name = map[int32]string{
	0: "None",
	1: "Deploying",
}

var InfoResponse_Mode_value = map[string]int32{
	"None":      0,
	"Deploying": 1,
}

func (x InfoResponse_Mode) String() string {
	return proto.EnumName(InfoResponse_Mode_name, int32(x))
}

func (InfoResponse_Mode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{19, 0}
}

type ArchiveResponse_Info int32

const (
	ArchiveResponse_None         ArchiveResponse_Info = 0
	ArchiveResponse_ActiveDeploy ArchiveResponse_Info = 1
)

var ArchiveResponse_Info_name = map[int32]string{
	0: "None",
	1: "ActiveDeploy",
}

var ArchiveResponse_Info_value = map[string]int32{
	"None":         0,
	"ActiveDeploy": 1,
}

func (x ArchiveResponse_Info) String() string {
	return proto.EnumName(ArchiveResponse_Info_name, int32(x))
}

func (ArchiveResponse_Info) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{34, 0}
}

type Archive struct {
	DeploymentID         []byte   `protobuf:"bytes,1,opt,name=deploymentID,proto3" json:"deploymentID,omitempty"`
	Peer                 *Peer    `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Location             string   `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Checksum             []byte   `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Ts                   int64    `protobuf:"varint,5,opt,name=ts,proto3" json:"ts,omitempty"`
	Dts                  int64    `protobuf:"varint,7,opt,name=dts,proto3" json:"dts,omitempty"`
	Initiator            string   `protobuf:"bytes,6,opt,name=initiator,proto3" json:"initiator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Archive) Reset()         { *m = Archive{} }
func (m *Archive) String() string { return proto.CompactTextString(m) }
func (*Archive) ProtoMessage()    {}
func (*Archive) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{0}
}

func (m *Archive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Archive.Unmarshal(m, b)
}
func (m *Archive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Archive.Marshal(b, m, deterministic)
}
func (m *Archive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Archive.Merge(m, src)
}
func (m *Archive) XXX_Size() int {
	return xxx_messageInfo_Archive.Size(m)
}
func (m *Archive) XXX_DiscardUnknown() {
	xxx_messageInfo_Archive.DiscardUnknown(m)
}

var xxx_messageInfo_Archive proto.InternalMessageInfo

func (m *Archive) GetDeploymentID() []byte {
	if m != nil {
		return m.DeploymentID
	}
	return nil
}

func (m *Archive) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *Archive) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Archive) GetChecksum() []byte {
	if m != nil {
		return m.Checksum
	}
	return nil
}

func (m *Archive) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *Archive) GetDts() int64 {
	if m != nil {
		return m.Dts
	}
	return 0
}

func (m *Archive) GetInitiator() string {
	if m != nil {
		return m.Initiator
	}
	return ""
}

type PeerMetadata struct {
	Capability           []byte   `protobuf:"bytes,1,opt,name=capability,proto3" json:"capability,omitempty"`
	RPCPort              uint32   `protobuf:"varint,2,opt,name=RPCPort,proto3" json:"RPCPort,omitempty"`
	RaftPort             uint32   `protobuf:"varint,3,opt,name=RaftPort,proto3" json:"RaftPort,omitempty"`
	SWIMPort             uint32   `protobuf:"varint,4,opt,name=SWIMPort,proto3" json:"SWIMPort,omitempty"`
	TorrentPort          uint32   `protobuf:"varint,5,opt,name=TorrentPort,proto3" json:"TorrentPort,omitempty"`
	DiscoveryPort        uint32   `protobuf:"varint,7,opt,name=DiscoveryPort,proto3" json:"DiscoveryPort,omitempty"`
	Status               int32    `protobuf:"varint,6,opt,name=Status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerMetadata) Reset()         { *m = PeerMetadata{} }
func (m *PeerMetadata) String() string { return proto.CompactTextString(m) }
func (*PeerMetadata) ProtoMessage()    {}
func (*PeerMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{1}
}

func (m *PeerMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerMetadata.Unmarshal(m, b)
}
func (m *PeerMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerMetadata.Marshal(b, m, deterministic)
}
func (m *PeerMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerMetadata.Merge(m, src)
}
func (m *PeerMetadata) XXX_Size() int {
	return xxx_messageInfo_PeerMetadata.Size(m)
}
func (m *PeerMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_PeerMetadata proto.InternalMessageInfo

func (m *PeerMetadata) GetCapability() []byte {
	if m != nil {
		return m.Capability
	}
	return nil
}

func (m *PeerMetadata) GetRPCPort() uint32 {
	if m != nil {
		return m.RPCPort
	}
	return 0
}

func (m *PeerMetadata) GetRaftPort() uint32 {
	if m != nil {
		return m.RaftPort
	}
	return 0
}

func (m *PeerMetadata) GetSWIMPort() uint32 {
	if m != nil {
		return m.SWIMPort
	}
	return 0
}

func (m *PeerMetadata) GetTorrentPort() uint32 {
	if m != nil {
		return m.TorrentPort
	}
	return 0
}

func (m *PeerMetadata) GetDiscoveryPort() uint32 {
	if m != nil {
		return m.DiscoveryPort
	}
	return 0
}

func (m *PeerMetadata) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type Peer struct {
	Status               Peer_State `protobuf:"varint,1,opt,name=Status,proto3,enum=agent.Peer_State" json:"Status,omitempty"`
	Ip                   string     `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Name                 string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	RPCPort              uint32     `protobuf:"varint,4,opt,name=RPCPort,proto3" json:"RPCPort,omitempty"`
	RaftPort             uint32     `protobuf:"varint,5,opt,name=RaftPort,proto3" json:"RaftPort,omitempty"`
	SWIMPort             uint32     `protobuf:"varint,6,opt,name=SWIMPort,proto3" json:"SWIMPort,omitempty"`
	TorrentPort          uint32     `protobuf:"varint,7,opt,name=TorrentPort,proto3" json:"TorrentPort,omitempty"`
	DiscoveryPort        uint32     `protobuf:"varint,8,opt,name=DiscoveryPort,proto3" json:"DiscoveryPort,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Peer) Reset()         { *m = Peer{} }
func (m *Peer) String() string { return proto.CompactTextString(m) }
func (*Peer) ProtoMessage()    {}
func (*Peer) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{2}
}

func (m *Peer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Peer.Unmarshal(m, b)
}
func (m *Peer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Peer.Marshal(b, m, deterministic)
}
func (m *Peer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Peer.Merge(m, src)
}
func (m *Peer) XXX_Size() int {
	return xxx_messageInfo_Peer.Size(m)
}
func (m *Peer) XXX_DiscardUnknown() {
	xxx_messageInfo_Peer.DiscardUnknown(m)
}

var xxx_messageInfo_Peer proto.InternalMessageInfo

func (m *Peer) GetStatus() Peer_State {
	if m != nil {
		return m.Status
	}
	return Peer_Node
}

func (m *Peer) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Peer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Peer) GetRPCPort() uint32 {
	if m != nil {
		return m.RPCPort
	}
	return 0
}

func (m *Peer) GetRaftPort() uint32 {
	if m != nil {
		return m.RaftPort
	}
	return 0
}

func (m *Peer) GetSWIMPort() uint32 {
	if m != nil {
		return m.SWIMPort
	}
	return 0
}

func (m *Peer) GetTorrentPort() uint32 {
	if m != nil {
		return m.TorrentPort
	}
	return 0
}

func (m *Peer) GetDiscoveryPort() uint32 {
	if m != nil {
		return m.DiscoveryPort
	}
	return 0
}

type TLSEvent struct {
	Fingerprint          string   `protobuf:"bytes,1,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	Certificate          []byte   `protobuf:"bytes,3,opt,name=Certificate,proto3" json:"Certificate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLSEvent) Reset()         { *m = TLSEvent{} }
func (m *TLSEvent) String() string { return proto.CompactTextString(m) }
func (*TLSEvent) ProtoMessage()    {}
func (*TLSEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{3}
}

func (m *TLSEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSEvent.Unmarshal(m, b)
}
func (m *TLSEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSEvent.Marshal(b, m, deterministic)
}
func (m *TLSEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSEvent.Merge(m, src)
}
func (m *TLSEvent) XXX_Size() int {
	return xxx_messageInfo_TLSEvent.Size(m)
}
func (m *TLSEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSEvent.DiscardUnknown(m)
}

var xxx_messageInfo_TLSEvent proto.InternalMessageInfo

func (m *TLSEvent) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

func (m *TLSEvent) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *TLSEvent) GetCertificate() []byte {
	if m != nil {
		return m.Certificate
	}
	return nil
}

type WALPreamble struct {
	Major                int32    `protobuf:"varint,1,opt,name=Major,proto3" json:"Major,omitempty"`
	Minor                int32    `protobuf:"varint,2,opt,name=Minor,proto3" json:"Minor,omitempty"`
	Patch                int32    `protobuf:"varint,3,opt,name=Patch,proto3" json:"Patch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WALPreamble) Reset()         { *m = WALPreamble{} }
func (m *WALPreamble) String() string { return proto.CompactTextString(m) }
func (*WALPreamble) ProtoMessage()    {}
func (*WALPreamble) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{4}
}

func (m *WALPreamble) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WALPreamble.Unmarshal(m, b)
}
func (m *WALPreamble) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WALPreamble.Marshal(b, m, deterministic)
}
func (m *WALPreamble) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WALPreamble.Merge(m, src)
}
func (m *WALPreamble) XXX_Size() int {
	return xxx_messageInfo_WALPreamble.Size(m)
}
func (m *WALPreamble) XXX_DiscardUnknown() {
	xxx_messageInfo_WALPreamble.DiscardUnknown(m)
}

var xxx_messageInfo_WALPreamble proto.InternalMessageInfo

func (m *WALPreamble) GetMajor() int32 {
	if m != nil {
		return m.Major
	}
	return 0
}

func (m *WALPreamble) GetMinor() int32 {
	if m != nil {
		return m.Minor
	}
	return 0
}

func (m *WALPreamble) GetPatch() int32 {
	if m != nil {
		return m.Patch
	}
	return 0
}

// Represents every message sent between nodes. effectively describes all possible events we may want
// to act upon.
type Message struct {
	Id     string `protobuf:"bytes,9,opt,name=id,proto3" json:"id,omitempty"`
	Hidden bool   `protobuf:"varint,999,opt,name=hidden,proto3" json:"hidden,omitempty"`
	// Identifies which field is filled in.
	Type Message_Type `protobuf:"varint,1,opt,name=type,proto3,enum=agent.Message_Type" json:"type,omitempty"`
	Peer *Peer        `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Ts   int64        `protobuf:"varint,3,opt,name=ts,proto3" json:"ts,omitempty"`
	// Types that are valid to be assigned to Event:
	//	*Message_None
	//	*Message_Int
	//	*Message_Log
	//	*Message_DeployCommand
	//	*Message_Deploy
	//	*Message_Membership
	//	*Message_Authority
	Event                isMessage_Event `protobuf_oneof:"Event"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{5}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Message) GetHidden() bool {
	if m != nil {
		return m.Hidden
	}
	return false
}

func (m *Message) GetType() Message_Type {
	if m != nil {
		return m.Type
	}
	return Message_PeerEvent
}

func (m *Message) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *Message) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

type isMessage_Event interface {
	isMessage_Event()
}

type Message_None struct {
	None bool `protobuf:"varint,4,opt,name=none,proto3,oneof"`
}

type Message_Int struct {
	Int int64 `protobuf:"varint,5,opt,name=int,proto3,oneof"`
}

type Message_Log struct {
	Log *Log `protobuf:"bytes,6,opt,name=log,proto3,oneof"`
}

type Message_DeployCommand struct {
	DeployCommand *DeployCommand `protobuf:"bytes,7,opt,name=deployCommand,proto3,oneof"`
}

type Message_Deploy struct {
	Deploy *Deploy `protobuf:"bytes,8,opt,name=deploy,proto3,oneof"`
}

type Message_Membership struct {
	Membership Message_NodeEvent `protobuf:"varint,10,opt,name=membership,proto3,enum=agent.Message_NodeEvent,oneof"`
}

type Message_Authority struct {
	Authority *TLSEvent `protobuf:"bytes,11,opt,name=authority,proto3,oneof"`
}

func (*Message_None) isMessage_Event() {}

func (*Message_Int) isMessage_Event() {}

func (*Message_Log) isMessage_Event() {}

func (*Message_DeployCommand) isMessage_Event() {}

func (*Message_Deploy) isMessage_Event() {}

func (*Message_Membership) isMessage_Event() {}

func (*Message_Authority) isMessage_Event() {}

func (m *Message) GetEvent() isMessage_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *Message) GetNone() bool {
	if x, ok := m.GetEvent().(*Message_None); ok {
		return x.None
	}
	return false
}

func (m *Message) GetInt() int64 {
	if x, ok := m.GetEvent().(*Message_Int); ok {
		return x.Int
	}
	return 0
}

func (m *Message) GetLog() *Log {
	if x, ok := m.GetEvent().(*Message_Log); ok {
		return x.Log
	}
	return nil
}

func (m *Message) GetDeployCommand() *DeployCommand {
	if x, ok := m.GetEvent().(*Message_DeployCommand); ok {
		return x.DeployCommand
	}
	return nil
}

func (m *Message) GetDeploy() *Deploy {
	if x, ok := m.GetEvent().(*Message_Deploy); ok {
		return x.Deploy
	}
	return nil
}

func (m *Message) GetMembership() Message_NodeEvent {
	if x, ok := m.GetEvent().(*Message_Membership); ok {
		return x.Membership
	}
	return Message_Joined
}

func (m *Message) GetAuthority() *TLSEvent {
	if x, ok := m.GetEvent().(*Message_Authority); ok {
		return x.Authority
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Message) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Message_None)(nil),
		(*Message_Int)(nil),
		(*Message_Log)(nil),
		(*Message_DeployCommand)(nil),
		(*Message_Deploy)(nil),
		(*Message_Membership)(nil),
		(*Message_Authority)(nil),
	}
}

// Write ahead log, deprecated.
type WAL struct {
	Messages             []*Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *WAL) Reset()         { *m = WAL{} }
func (m *WAL) String() string { return proto.CompactTextString(m) }
func (*WAL) ProtoMessage()    {}
func (*WAL) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{6}
}

func (m *WAL) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WAL.Unmarshal(m, b)
}
func (m *WAL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WAL.Marshal(b, m, deterministic)
}
func (m *WAL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WAL.Merge(m, src)
}
func (m *WAL) XXX_Size() int {
	return xxx_messageInfo_WAL.Size(m)
}
func (m *WAL) XXX_DiscardUnknown() {
	xxx_messageInfo_WAL.DiscardUnknown(m)
}

var xxx_messageInfo_WAL proto.InternalMessageInfo

func (m *WAL) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

type DeployOptions struct {
	Concurrency          int64    `protobuf:"varint,2,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
	Timeout              int64    `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	IgnoreFailures       bool     `protobuf:"varint,4,opt,name=ignoreFailures,proto3" json:"ignoreFailures,omitempty"`
	SilenceDeployLogs    bool     `protobuf:"varint,5,opt,name=silenceDeployLogs,proto3" json:"silenceDeployLogs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployOptions) Reset()         { *m = DeployOptions{} }
func (m *DeployOptions) String() string { return proto.CompactTextString(m) }
func (*DeployOptions) ProtoMessage()    {}
func (*DeployOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{7}
}

func (m *DeployOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployOptions.Unmarshal(m, b)
}
func (m *DeployOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployOptions.Marshal(b, m, deterministic)
}
func (m *DeployOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployOptions.Merge(m, src)
}
func (m *DeployOptions) XXX_Size() int {
	return xxx_messageInfo_DeployOptions.Size(m)
}
func (m *DeployOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DeployOptions proto.InternalMessageInfo

func (m *DeployOptions) GetConcurrency() int64 {
	if m != nil {
		return m.Concurrency
	}
	return 0
}

func (m *DeployOptions) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *DeployOptions) GetIgnoreFailures() bool {
	if m != nil {
		return m.IgnoreFailures
	}
	return false
}

func (m *DeployOptions) GetSilenceDeployLogs() bool {
	if m != nil {
		return m.SilenceDeployLogs
	}
	return false
}

type DeployCommand struct {
	Command              DeployCommand_Command `protobuf:"varint,1,opt,name=command,proto3,enum=agent.DeployCommand_Command" json:"command,omitempty"`
	Archive              *Archive              `protobuf:"bytes,2,opt,name=archive,proto3" json:"archive,omitempty"`
	Initiator            string                `protobuf:"bytes,3,opt,name=initiator,proto3" json:"initiator,omitempty"`
	Options              *DeployOptions        `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DeployCommand) Reset()         { *m = DeployCommand{} }
func (m *DeployCommand) String() string { return proto.CompactTextString(m) }
func (*DeployCommand) ProtoMessage()    {}
func (*DeployCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{8}
}

func (m *DeployCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployCommand.Unmarshal(m, b)
}
func (m *DeployCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployCommand.Marshal(b, m, deterministic)
}
func (m *DeployCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployCommand.Merge(m, src)
}
func (m *DeployCommand) XXX_Size() int {
	return xxx_messageInfo_DeployCommand.Size(m)
}
func (m *DeployCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployCommand.DiscardUnknown(m)
}

var xxx_messageInfo_DeployCommand proto.InternalMessageInfo

func (m *DeployCommand) GetCommand() DeployCommand_Command {
	if m != nil {
		return m.Command
	}
	return DeployCommand_Begin
}

func (m *DeployCommand) GetArchive() *Archive {
	if m != nil {
		return m.Archive
	}
	return nil
}

func (m *DeployCommand) GetInitiator() string {
	if m != nil {
		return m.Initiator
	}
	return ""
}

func (m *DeployCommand) GetOptions() *DeployOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type Deploy struct {
	Stage                Deploy_Stage   `protobuf:"varint,1,opt,name=stage,proto3,enum=agent.Deploy_Stage" json:"stage,omitempty"`
	Archive              *Archive       `protobuf:"bytes,2,opt,name=archive,proto3" json:"archive,omitempty"`
	Options              *DeployOptions `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`
	Error                string         `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Deploy) Reset()         { *m = Deploy{} }
func (m *Deploy) String() string { return proto.CompactTextString(m) }
func (*Deploy) ProtoMessage()    {}
func (*Deploy) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{9}
}

func (m *Deploy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deploy.Unmarshal(m, b)
}
func (m *Deploy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deploy.Marshal(b, m, deterministic)
}
func (m *Deploy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deploy.Merge(m, src)
}
func (m *Deploy) XXX_Size() int {
	return xxx_messageInfo_Deploy.Size(m)
}
func (m *Deploy) XXX_DiscardUnknown() {
	xxx_messageInfo_Deploy.DiscardUnknown(m)
}

var xxx_messageInfo_Deploy proto.InternalMessageInfo

func (m *Deploy) GetStage() Deploy_Stage {
	if m != nil {
		return m.Stage
	}
	return Deploy_Failed
}

func (m *Deploy) GetArchive() *Archive {
	if m != nil {
		return m.Archive
	}
	return nil
}

func (m *Deploy) GetOptions() *DeployOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *Deploy) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type DeployCommandRequest struct {
	Archive              *Archive       `protobuf:"bytes,1,opt,name=archive,proto3" json:"archive,omitempty"`
	Options              *DeployOptions `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`
	Peers                []*Peer        `protobuf:"bytes,4,rep,name=peers,proto3" json:"peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DeployCommandRequest) Reset()         { *m = DeployCommandRequest{} }
func (m *DeployCommandRequest) String() string { return proto.CompactTextString(m) }
func (*DeployCommandRequest) ProtoMessage()    {}
func (*DeployCommandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{10}
}

func (m *DeployCommandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployCommandRequest.Unmarshal(m, b)
}
func (m *DeployCommandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployCommandRequest.Marshal(b, m, deterministic)
}
func (m *DeployCommandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployCommandRequest.Merge(m, src)
}
func (m *DeployCommandRequest) XXX_Size() int {
	return xxx_messageInfo_DeployCommandRequest.Size(m)
}
func (m *DeployCommandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployCommandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeployCommandRequest proto.InternalMessageInfo

func (m *DeployCommandRequest) GetArchive() *Archive {
	if m != nil {
		return m.Archive
	}
	return nil
}

func (m *DeployCommandRequest) GetOptions() *DeployOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *DeployCommandRequest) GetPeers() []*Peer {
	if m != nil {
		return m.Peers
	}
	return nil
}

type DeployCommandResult struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployCommandResult) Reset()         { *m = DeployCommandResult{} }
func (m *DeployCommandResult) String() string { return proto.CompactTextString(m) }
func (*DeployCommandResult) ProtoMessage()    {}
func (*DeployCommandResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{11}
}

func (m *DeployCommandResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployCommandResult.Unmarshal(m, b)
}
func (m *DeployCommandResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployCommandResult.Marshal(b, m, deterministic)
}
func (m *DeployCommandResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployCommandResult.Merge(m, src)
}
func (m *DeployCommandResult) XXX_Size() int {
	return xxx_messageInfo_DeployCommandResult.Size(m)
}
func (m *DeployCommandResult) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployCommandResult.DiscardUnknown(m)
}

var xxx_messageInfo_DeployCommandResult proto.InternalMessageInfo

type Log struct {
	Log                  string   `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Log) Reset()         { *m = Log{} }
func (m *Log) String() string { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()    {}
func (*Log) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{12}
}

func (m *Log) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log.Unmarshal(m, b)
}
func (m *Log) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log.Marshal(b, m, deterministic)
}
func (m *Log) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log.Merge(m, src)
}
func (m *Log) XXX_Size() int {
	return xxx_messageInfo_Log.Size(m)
}
func (m *Log) XXX_DiscardUnknown() {
	xxx_messageInfo_Log.DiscardUnknown(m)
}

var xxx_messageInfo_Log proto.InternalMessageInfo

func (m *Log) GetLog() string {
	if m != nil {
		return m.Log
	}
	return ""
}

type UploadMetadata struct {
	Bytes                uint64   `protobuf:"varint,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Initiator            string   `protobuf:"bytes,2,opt,name=initiator,proto3" json:"initiator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadMetadata) Reset()         { *m = UploadMetadata{} }
func (m *UploadMetadata) String() string { return proto.CompactTextString(m) }
func (*UploadMetadata) ProtoMessage()    {}
func (*UploadMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{13}
}

func (m *UploadMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadMetadata.Unmarshal(m, b)
}
func (m *UploadMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadMetadata.Marshal(b, m, deterministic)
}
func (m *UploadMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadMetadata.Merge(m, src)
}
func (m *UploadMetadata) XXX_Size() int {
	return xxx_messageInfo_UploadMetadata.Size(m)
}
func (m *UploadMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_UploadMetadata proto.InternalMessageInfo

func (m *UploadMetadata) GetBytes() uint64 {
	if m != nil {
		return m.Bytes
	}
	return 0
}

func (m *UploadMetadata) GetInitiator() string {
	if m != nil {
		return m.Initiator
	}
	return ""
}

type UploadChunk struct {
	Data     []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Checksum []byte `protobuf:"bytes,2,opt,name=checksum,proto3" json:"checksum,omitempty"`
	// Types that are valid to be assigned to InitialChunkMetadata:
	//	*UploadChunk_None
	//	*UploadChunk_Metadata
	InitialChunkMetadata isUploadChunk_InitialChunkMetadata `protobuf_oneof:"initialChunkMetadata"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *UploadChunk) Reset()         { *m = UploadChunk{} }
func (m *UploadChunk) String() string { return proto.CompactTextString(m) }
func (*UploadChunk) ProtoMessage()    {}
func (*UploadChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{14}
}

func (m *UploadChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadChunk.Unmarshal(m, b)
}
func (m *UploadChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadChunk.Marshal(b, m, deterministic)
}
func (m *UploadChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadChunk.Merge(m, src)
}
func (m *UploadChunk) XXX_Size() int {
	return xxx_messageInfo_UploadChunk.Size(m)
}
func (m *UploadChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadChunk.DiscardUnknown(m)
}

var xxx_messageInfo_UploadChunk proto.InternalMessageInfo

func (m *UploadChunk) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UploadChunk) GetChecksum() []byte {
	if m != nil {
		return m.Checksum
	}
	return nil
}

type isUploadChunk_InitialChunkMetadata interface {
	isUploadChunk_InitialChunkMetadata()
}

type UploadChunk_None struct {
	None bool `protobuf:"varint,3,opt,name=none,proto3,oneof"`
}

type UploadChunk_Metadata struct {
	Metadata *UploadMetadata `protobuf:"bytes,4,opt,name=metadata,proto3,oneof"`
}

func (*UploadChunk_None) isUploadChunk_InitialChunkMetadata() {}

func (*UploadChunk_Metadata) isUploadChunk_InitialChunkMetadata() {}

func (m *UploadChunk) GetInitialChunkMetadata() isUploadChunk_InitialChunkMetadata {
	if m != nil {
		return m.InitialChunkMetadata
	}
	return nil
}

func (m *UploadChunk) GetNone() bool {
	if x, ok := m.GetInitialChunkMetadata().(*UploadChunk_None); ok {
		return x.None
	}
	return false
}

func (m *UploadChunk) GetMetadata() *UploadMetadata {
	if x, ok := m.GetInitialChunkMetadata().(*UploadChunk_Metadata); ok {
		return x.Metadata
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*UploadChunk) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*UploadChunk_None)(nil),
		(*UploadChunk_Metadata)(nil),
	}
}

type UploadResponse struct {
	Archive              *Archive `protobuf:"bytes,1,opt,name=archive,proto3" json:"archive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadResponse) Reset()         { *m = UploadResponse{} }
func (m *UploadResponse) String() string { return proto.CompactTextString(m) }
func (*UploadResponse) ProtoMessage()    {}
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{15}
}

func (m *UploadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadResponse.Unmarshal(m, b)
}
func (m *UploadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadResponse.Marshal(b, m, deterministic)
}
func (m *UploadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadResponse.Merge(m, src)
}
func (m *UploadResponse) XXX_Size() int {
	return xxx_messageInfo_UploadResponse.Size(m)
}
func (m *UploadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UploadResponse proto.InternalMessageInfo

func (m *UploadResponse) GetArchive() *Archive {
	if m != nil {
		return m.Archive
	}
	return nil
}

type WatchRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchRequest) Reset()         { *m = WatchRequest{} }
func (m *WatchRequest) String() string { return proto.CompactTextString(m) }
func (*WatchRequest) ProtoMessage()    {}
func (*WatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{16}
}

func (m *WatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchRequest.Unmarshal(m, b)
}
func (m *WatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchRequest.Marshal(b, m, deterministic)
}
func (m *WatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchRequest.Merge(m, src)
}
func (m *WatchRequest) XXX_Size() int {
	return xxx_messageInfo_WatchRequest.Size(m)
}
func (m *WatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchRequest proto.InternalMessageInfo

type DispatchResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DispatchResponse) Reset()         { *m = DispatchResponse{} }
func (m *DispatchResponse) String() string { return proto.CompactTextString(m) }
func (*DispatchResponse) ProtoMessage()    {}
func (*DispatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{17}
}

func (m *DispatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DispatchResponse.Unmarshal(m, b)
}
func (m *DispatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DispatchResponse.Marshal(b, m, deterministic)
}
func (m *DispatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DispatchResponse.Merge(m, src)
}
func (m *DispatchResponse) XXX_Size() int {
	return xxx_messageInfo_DispatchResponse.Size(m)
}
func (m *DispatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DispatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DispatchResponse proto.InternalMessageInfo

type InfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoRequest) Reset()         { *m = InfoRequest{} }
func (m *InfoRequest) String() string { return proto.CompactTextString(m) }
func (*InfoRequest) ProtoMessage()    {}
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{18}
}

func (m *InfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoRequest.Unmarshal(m, b)
}
func (m *InfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoRequest.Marshal(b, m, deterministic)
}
func (m *InfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoRequest.Merge(m, src)
}
func (m *InfoRequest) XXX_Size() int {
	return xxx_messageInfo_InfoRequest.Size(m)
}
func (m *InfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InfoRequest proto.InternalMessageInfo

type InfoResponse struct {
	Mode                 InfoResponse_Mode `protobuf:"varint,1,opt,name=mode,proto3,enum=agent.InfoResponse_Mode" json:"mode,omitempty"`
	Deploying            *DeployCommand    `protobuf:"bytes,2,opt,name=deploying,proto3" json:"deploying,omitempty"`
	Deployed             *DeployCommand    `protobuf:"bytes,3,opt,name=deployed,proto3" json:"deployed,omitempty"`
	Leader               *Peer             `protobuf:"bytes,4,opt,name=leader,proto3" json:"leader,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *InfoResponse) Reset()         { *m = InfoResponse{} }
func (m *InfoResponse) String() string { return proto.CompactTextString(m) }
func (*InfoResponse) ProtoMessage()    {}
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{19}
}

func (m *InfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoResponse.Unmarshal(m, b)
}
func (m *InfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoResponse.Marshal(b, m, deterministic)
}
func (m *InfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoResponse.Merge(m, src)
}
func (m *InfoResponse) XXX_Size() int {
	return xxx_messageInfo_InfoResponse.Size(m)
}
func (m *InfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InfoResponse proto.InternalMessageInfo

func (m *InfoResponse) GetMode() InfoResponse_Mode {
	if m != nil {
		return m.Mode
	}
	return InfoResponse_None
}

func (m *InfoResponse) GetDeploying() *DeployCommand {
	if m != nil {
		return m.Deploying
	}
	return nil
}

func (m *InfoResponse) GetDeployed() *DeployCommand {
	if m != nil {
		return m.Deployed
	}
	return nil
}

func (m *InfoResponse) GetLeader() *Peer {
	if m != nil {
		return m.Leader
	}
	return nil
}

type ConnectRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectRequest) Reset()         { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()    {}
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{20}
}

func (m *ConnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectRequest.Unmarshal(m, b)
}
func (m *ConnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectRequest.Marshal(b, m, deterministic)
}
func (m *ConnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectRequest.Merge(m, src)
}
func (m *ConnectRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectRequest.Size(m)
}
func (m *ConnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectRequest proto.InternalMessageInfo

type ConnectResponse struct {
	Secret               []byte   `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	Quorum               []*Peer  `protobuf:"bytes,2,rep,name=quorum,proto3" json:"quorum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectResponse) Reset()         { *m = ConnectResponse{} }
func (m *ConnectResponse) String() string { return proto.CompactTextString(m) }
func (*ConnectResponse) ProtoMessage()    {}
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{21}
}

func (m *ConnectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectResponse.Unmarshal(m, b)
}
func (m *ConnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectResponse.Marshal(b, m, deterministic)
}
func (m *ConnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectResponse.Merge(m, src)
}
func (m *ConnectResponse) XXX_Size() int {
	return xxx_messageInfo_ConnectResponse.Size(m)
}
func (m *ConnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectResponse proto.InternalMessageInfo

func (m *ConnectResponse) GetSecret() []byte {
	if m != nil {
		return m.Secret
	}
	return nil
}

func (m *ConnectResponse) GetQuorum() []*Peer {
	if m != nil {
		return m.Quorum
	}
	return nil
}

type StatusRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusRequest) Reset()         { *m = StatusRequest{} }
func (m *StatusRequest) String() string { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()    {}
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{22}
}

func (m *StatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusRequest.Unmarshal(m, b)
}
func (m *StatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusRequest.Marshal(b, m, deterministic)
}
func (m *StatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusRequest.Merge(m, src)
}
func (m *StatusRequest) XXX_Size() int {
	return xxx_messageInfo_StatusRequest.Size(m)
}
func (m *StatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatusRequest proto.InternalMessageInfo

type StatusResponse struct {
	Peer                 *Peer     `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	Deployments          []*Deploy `protobuf:"bytes,4,rep,name=deployments,proto3" json:"deployments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *StatusResponse) Reset()         { *m = StatusResponse{} }
func (m *StatusResponse) String() string { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()    {}
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{23}
}

func (m *StatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResponse.Unmarshal(m, b)
}
func (m *StatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResponse.Marshal(b, m, deterministic)
}
func (m *StatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResponse.Merge(m, src)
}
func (m *StatusResponse) XXX_Size() int {
	return xxx_messageInfo_StatusResponse.Size(m)
}
func (m *StatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResponse proto.InternalMessageInfo

func (m *StatusResponse) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *StatusResponse) GetDeployments() []*Deploy {
	if m != nil {
		return m.Deployments
	}
	return nil
}

type DeployRequest struct {
	Archive              *Archive       `protobuf:"bytes,1,opt,name=archive,proto3" json:"archive,omitempty"`
	Options              *DeployOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DeployRequest) Reset()         { *m = DeployRequest{} }
func (m *DeployRequest) String() string { return proto.CompactTextString(m) }
func (*DeployRequest) ProtoMessage()    {}
func (*DeployRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{24}
}

func (m *DeployRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployRequest.Unmarshal(m, b)
}
func (m *DeployRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployRequest.Marshal(b, m, deterministic)
}
func (m *DeployRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployRequest.Merge(m, src)
}
func (m *DeployRequest) XXX_Size() int {
	return xxx_messageInfo_DeployRequest.Size(m)
}
func (m *DeployRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeployRequest proto.InternalMessageInfo

func (m *DeployRequest) GetArchive() *Archive {
	if m != nil {
		return m.Archive
	}
	return nil
}

func (m *DeployRequest) GetOptions() *DeployOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type DeployResponse struct {
	Deploy               *Deploy  `protobuf:"bytes,1,opt,name=deploy,proto3" json:"deploy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployResponse) Reset()         { *m = DeployResponse{} }
func (m *DeployResponse) String() string { return proto.CompactTextString(m) }
func (*DeployResponse) ProtoMessage()    {}
func (*DeployResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{25}
}

func (m *DeployResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployResponse.Unmarshal(m, b)
}
func (m *DeployResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployResponse.Marshal(b, m, deterministic)
}
func (m *DeployResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployResponse.Merge(m, src)
}
func (m *DeployResponse) XXX_Size() int {
	return xxx_messageInfo_DeployResponse.Size(m)
}
func (m *DeployResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeployResponse proto.InternalMessageInfo

func (m *DeployResponse) GetDeploy() *Deploy {
	if m != nil {
		return m.Deploy
	}
	return nil
}

type ShutdownRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShutdownRequest) Reset()         { *m = ShutdownRequest{} }
func (m *ShutdownRequest) String() string { return proto.CompactTextString(m) }
func (*ShutdownRequest) ProtoMessage()    {}
func (*ShutdownRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{26}
}

func (m *ShutdownRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShutdownRequest.Unmarshal(m, b)
}
func (m *ShutdownRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShutdownRequest.Marshal(b, m, deterministic)
}
func (m *ShutdownRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShutdownRequest.Merge(m, src)
}
func (m *ShutdownRequest) XXX_Size() int {
	return xxx_messageInfo_ShutdownRequest.Size(m)
}
func (m *ShutdownRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShutdownRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShutdownRequest proto.InternalMessageInfo

type ShutdownResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShutdownResponse) Reset()         { *m = ShutdownResponse{} }
func (m *ShutdownResponse) String() string { return proto.CompactTextString(m) }
func (*ShutdownResponse) ProtoMessage()    {}
func (*ShutdownResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{27}
}

func (m *ShutdownResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShutdownResponse.Unmarshal(m, b)
}
func (m *ShutdownResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShutdownResponse.Marshal(b, m, deterministic)
}
func (m *ShutdownResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShutdownResponse.Merge(m, src)
}
func (m *ShutdownResponse) XXX_Size() int {
	return xxx_messageInfo_ShutdownResponse.Size(m)
}
func (m *ShutdownResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShutdownResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShutdownResponse proto.InternalMessageInfo

type CancelRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelRequest) Reset()         { *m = CancelRequest{} }
func (m *CancelRequest) String() string { return proto.CompactTextString(m) }
func (*CancelRequest) ProtoMessage()    {}
func (*CancelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{28}
}

func (m *CancelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelRequest.Unmarshal(m, b)
}
func (m *CancelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelRequest.Marshal(b, m, deterministic)
}
func (m *CancelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelRequest.Merge(m, src)
}
func (m *CancelRequest) XXX_Size() int {
	return xxx_messageInfo_CancelRequest.Size(m)
}
func (m *CancelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelRequest proto.InternalMessageInfo

type CancelResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelResponse) Reset()         { *m = CancelResponse{} }
func (m *CancelResponse) String() string { return proto.CompactTextString(m) }
func (*CancelResponse) ProtoMessage()    {}
func (*CancelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{29}
}

func (m *CancelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelResponse.Unmarshal(m, b)
}
func (m *CancelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelResponse.Marshal(b, m, deterministic)
}
func (m *CancelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelResponse.Merge(m, src)
}
func (m *CancelResponse) XXX_Size() int {
	return xxx_messageInfo_CancelResponse.Size(m)
}
func (m *CancelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CancelResponse proto.InternalMessageInfo

type LogRequest struct {
	DeploymentID         []byte   `protobuf:"bytes,1,opt,name=deploymentID,proto3" json:"deploymentID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogRequest) Reset()         { *m = LogRequest{} }
func (m *LogRequest) String() string { return proto.CompactTextString(m) }
func (*LogRequest) ProtoMessage()    {}
func (*LogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{30}
}

func (m *LogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogRequest.Unmarshal(m, b)
}
func (m *LogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogRequest.Marshal(b, m, deterministic)
}
func (m *LogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogRequest.Merge(m, src)
}
func (m *LogRequest) XXX_Size() int {
	return xxx_messageInfo_LogRequest.Size(m)
}
func (m *LogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogRequest proto.InternalMessageInfo

func (m *LogRequest) GetDeploymentID() []byte {
	if m != nil {
		return m.DeploymentID
	}
	return nil
}

type LogResponse struct {
	Content              []byte   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogResponse) Reset()         { *m = LogResponse{} }
func (m *LogResponse) String() string { return proto.CompactTextString(m) }
func (*LogResponse) ProtoMessage()    {}
func (*LogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{31}
}

func (m *LogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogResponse.Unmarshal(m, b)
}
func (m *LogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogResponse.Marshal(b, m, deterministic)
}
func (m *LogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogResponse.Merge(m, src)
}
func (m *LogResponse) XXX_Size() int {
	return xxx_messageInfo_LogResponse.Size(m)
}
func (m *LogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogResponse proto.InternalMessageInfo

func (m *LogResponse) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type DispatchRequest struct {
	Messages             []*Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DispatchRequest) Reset()         { *m = DispatchRequest{} }
func (m *DispatchRequest) String() string { return proto.CompactTextString(m) }
func (*DispatchRequest) ProtoMessage()    {}
func (*DispatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{32}
}

func (m *DispatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DispatchRequest.Unmarshal(m, b)
}
func (m *DispatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DispatchRequest.Marshal(b, m, deterministic)
}
func (m *DispatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DispatchRequest.Merge(m, src)
}
func (m *DispatchRequest) XXX_Size() int {
	return xxx_messageInfo_DispatchRequest.Size(m)
}
func (m *DispatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DispatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DispatchRequest proto.InternalMessageInfo

func (m *DispatchRequest) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

type ArchiveRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchiveRequest) Reset()         { *m = ArchiveRequest{} }
func (m *ArchiveRequest) String() string { return proto.CompactTextString(m) }
func (*ArchiveRequest) ProtoMessage()    {}
func (*ArchiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{33}
}

func (m *ArchiveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchiveRequest.Unmarshal(m, b)
}
func (m *ArchiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchiveRequest.Marshal(b, m, deterministic)
}
func (m *ArchiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveRequest.Merge(m, src)
}
func (m *ArchiveRequest) XXX_Size() int {
	return xxx_messageInfo_ArchiveRequest.Size(m)
}
func (m *ArchiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveRequest proto.InternalMessageInfo

type ArchiveResponse struct {
	Info                 ArchiveResponse_Info `protobuf:"varint,1,opt,name=info,proto3,enum=agent.ArchiveResponse_Info" json:"info,omitempty"`
	Deploy               *Deploy              `protobuf:"bytes,2,opt,name=deploy,proto3" json:"deploy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ArchiveResponse) Reset()         { *m = ArchiveResponse{} }
func (m *ArchiveResponse) String() string { return proto.CompactTextString(m) }
func (*ArchiveResponse) ProtoMessage()    {}
func (*ArchiveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{34}
}

func (m *ArchiveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchiveResponse.Unmarshal(m, b)
}
func (m *ArchiveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchiveResponse.Marshal(b, m, deterministic)
}
func (m *ArchiveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveResponse.Merge(m, src)
}
func (m *ArchiveResponse) XXX_Size() int {
	return xxx_messageInfo_ArchiveResponse.Size(m)
}
func (m *ArchiveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveResponse proto.InternalMessageInfo

func (m *ArchiveResponse) GetInfo() ArchiveResponse_Info {
	if m != nil {
		return m.Info
	}
	return ArchiveResponse_None
}

func (m *ArchiveResponse) GetDeploy() *Deploy {
	if m != nil {
		return m.Deploy
	}
	return nil
}

func init() {
	proto.RegisterEnum("agent.Peer_State", Peer_State_name, Peer_State_value)
	proto.RegisterEnum("agent.Message_NodeEvent", Message_NodeEvent_name, Message_NodeEvent_value)
	proto.RegisterEnum("agent.Message_Type", Message_Type_name, Message_Type_value)
	proto.RegisterEnum("agent.DeployCommand_Command", DeployCommand_Command_name, DeployCommand_Command_value)
	proto.RegisterEnum("agent.Deploy_Stage", Deploy_Stage_name, Deploy_Stage_value)
	proto.RegisterEnum("agent.InfoResponse_Mode", InfoResponse_Mode_name, InfoResponse_Mode_value)
	proto.RegisterEnum("agent.ArchiveResponse_Info", ArchiveResponse_Info_name, ArchiveResponse_Info_value)
	proto.RegisterType((*Archive)(nil), "agent.Archive")
	proto.RegisterType((*PeerMetadata)(nil), "agent.PeerMetadata")
	proto.RegisterType((*Peer)(nil), "agent.Peer")
	proto.RegisterType((*TLSEvent)(nil), "agent.TLSEvent")
	proto.RegisterType((*WALPreamble)(nil), "agent.WALPreamble")
	proto.RegisterType((*Message)(nil), "agent.Message")
	proto.RegisterType((*WAL)(nil), "agent.WAL")
	proto.RegisterType((*DeployOptions)(nil), "agent.DeployOptions")
	proto.RegisterType((*DeployCommand)(nil), "agent.DeployCommand")
	proto.RegisterType((*Deploy)(nil), "agent.Deploy")
	proto.RegisterType((*DeployCommandRequest)(nil), "agent.DeployCommandRequest")
	proto.RegisterType((*DeployCommandResult)(nil), "agent.DeployCommandResult")
	proto.RegisterType((*Log)(nil), "agent.Log")
	proto.RegisterType((*UploadMetadata)(nil), "agent.UploadMetadata")
	proto.RegisterType((*UploadChunk)(nil), "agent.UploadChunk")
	proto.RegisterType((*UploadResponse)(nil), "agent.UploadResponse")
	proto.RegisterType((*WatchRequest)(nil), "agent.WatchRequest")
	proto.RegisterType((*DispatchResponse)(nil), "agent.DispatchResponse")
	proto.RegisterType((*InfoRequest)(nil), "agent.InfoRequest")
	proto.RegisterType((*InfoResponse)(nil), "agent.InfoResponse")
	proto.RegisterType((*ConnectRequest)(nil), "agent.ConnectRequest")
	proto.RegisterType((*ConnectResponse)(nil), "agent.ConnectResponse")
	proto.RegisterType((*StatusRequest)(nil), "agent.StatusRequest")
	proto.RegisterType((*StatusResponse)(nil), "agent.StatusResponse")
	proto.RegisterType((*DeployRequest)(nil), "agent.DeployRequest")
	proto.RegisterType((*DeployResponse)(nil), "agent.DeployResponse")
	proto.RegisterType((*ShutdownRequest)(nil), "agent.ShutdownRequest")
	proto.RegisterType((*ShutdownResponse)(nil), "agent.ShutdownResponse")
	proto.RegisterType((*CancelRequest)(nil), "agent.CancelRequest")
	proto.RegisterType((*CancelResponse)(nil), "agent.CancelResponse")
	proto.RegisterType((*LogRequest)(nil), "agent.LogRequest")
	proto.RegisterType((*LogResponse)(nil), "agent.LogResponse")
	proto.RegisterType((*DispatchRequest)(nil), "agent.DispatchRequest")
	proto.RegisterType((*ArchiveRequest)(nil), "agent.ArchiveRequest")
	proto.RegisterType((*ArchiveResponse)(nil), "agent.ArchiveResponse")
}

func init() { proto.RegisterFile("agent.proto", fileDescriptor_56ede974c0020f77) }

var fileDescriptor_56ede974c0020f77 = []byte{
	// 1743 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x58, 0xcd, 0x6f, 0xdc, 0xc6,
	0x15, 0x5f, 0x2e, 0xc9, 0xfd, 0x78, 0xfb, 0x45, 0x8f, 0x64, 0x79, 0xa1, 0x04, 0x89, 0x3a, 0x6d,
	0x6a, 0xa5, 0x08, 0x64, 0x79, 0x83, 0x36, 0x80, 0xd1, 0x1c, 0xe4, 0x55, 0x13, 0xb9, 0x5d, 0xc5,
	0xea, 0xc8, 0x85, 0xaf, 0xa5, 0xc8, 0x11, 0x97, 0xcd, 0xee, 0x0c, 0x43, 0xce, 0xaa, 0xd0, 0xbd,
	0xa7, 0x02, 0x3d, 0xf5, 0xd2, 0x63, 0xfb, 0xcf, 0xf4, 0x4f, 0xe8, 0xb1, 0x28, 0xd0, 0x43, 0xfa,
	0x67, 0x14, 0xf3, 0x45, 0x91, 0x94, 0xec, 0xc8, 0xf0, 0x49, 0x7c, 0x1f, 0xf3, 0xe6, 0xbd, 0xdf,
	0xfb, 0x9a, 0x15, 0x0c, 0xc2, 0x84, 0x32, 0x71, 0x90, 0xe5, 0x5c, 0x70, 0xe4, 0x2b, 0x02, 0xff,
	0xd3, 0x81, 0xee, 0x51, 0x1e, 0x2d, 0xd3, 0x2b, 0x8a, 0x30, 0x0c, 0x63, 0x9a, 0xad, 0xf8, 0xf5,
	0x9a, 0x32, 0xf1, 0xe2, 0x78, 0xea, 0xec, 0x39, 0xfb, 0x43, 0x52, 0xe3, 0xa1, 0x8f, 0xc1, 0xcb,
	0x28, 0xcd, 0xa7, 0xed, 0x3d, 0x67, 0x7f, 0x30, 0x1b, 0x1c, 0x68, 0x93, 0x67, 0x94, 0xe6, 0x44,
	0x09, 0xd0, 0x2e, 0xf4, 0x56, 0x3c, 0x0a, 0x45, 0xca, 0xd9, 0xd4, 0xdd, 0x73, 0xf6, 0xfb, 0xa4,
	0xa4, 0xa5, 0x2c, 0x5a, 0xd2, 0xe8, 0xdb, 0x62, 0xb3, 0x9e, 0x7a, 0xca, 0x78, 0x49, 0xa3, 0x31,
	0xb4, 0x45, 0x31, 0xf5, 0xf7, 0x9c, 0x7d, 0x97, 0xb4, 0x45, 0x81, 0x02, 0x70, 0x63, 0x51, 0x4c,
	0xbb, 0x8a, 0x21, 0x3f, 0xd1, 0x87, 0xd0, 0x4f, 0x59, 0x2a, 0xd2, 0x50, 0xf0, 0x7c, 0xda, 0x51,
	0xa6, 0x6f, 0x18, 0xf8, 0x3f, 0x0e, 0x0c, 0xa5, 0x1b, 0xa7, 0x54, 0x84, 0x71, 0x28, 0x42, 0xf4,
	0x11, 0x40, 0x14, 0x66, 0xe1, 0x45, 0xba, 0x4a, 0xc5, 0xb5, 0x89, 0xa5, 0xc2, 0x41, 0x53, 0xe8,
	0x92, 0xb3, 0xf9, 0x19, 0xcf, 0x85, 0x0a, 0x66, 0x44, 0x2c, 0x29, 0xdd, 0x24, 0xe1, 0xa5, 0x50,
	0x22, 0x57, 0x89, 0x4a, 0x5a, 0xca, 0xce, 0x5f, 0xbf, 0x38, 0x55, 0x32, 0x4f, 0xcb, 0x2c, 0x8d,
	0xf6, 0x60, 0xf0, 0x8a, 0xe7, 0x39, 0x65, 0xfa, 0xa8, 0xaf, 0xc4, 0x55, 0x16, 0xfa, 0x09, 0x8c,
	0x8e, 0xd3, 0x22, 0xe2, 0x57, 0x34, 0xbf, 0x56, 0x3a, 0x5d, 0xa5, 0x53, 0x67, 0xa2, 0x1d, 0xe8,
	0x9c, 0x8b, 0x50, 0x6c, 0x0a, 0x15, 0xa5, 0x4f, 0x0c, 0x85, 0xff, 0xd6, 0x06, 0x4f, 0x86, 0x88,
	0x3e, 0x2d, 0x15, 0x64, 0x58, 0xe3, 0xd9, 0x83, 0x4a, 0x1a, 0x0e, 0xa4, 0x84, 0xda, 0x33, 0x12,
	0xd6, 0x34, 0x53, 0x01, 0xf6, 0x49, 0x3b, 0xcd, 0x10, 0x02, 0x8f, 0x85, 0x6b, 0x6a, 0x52, 0xa3,
	0xbe, 0xab, 0x48, 0x78, 0x6f, 0x46, 0xc2, 0x7f, 0x0b, 0x12, 0x9d, 0xb7, 0x23, 0xd1, 0xbd, 0x07,
	0x12, 0xbd, 0x3b, 0x90, 0xc0, 0x8f, 0xc1, 0x57, 0xe1, 0xa0, 0x1e, 0x78, 0xdf, 0xf0, 0x98, 0x06,
	0x2d, 0x04, 0xd0, 0x99, 0xaf, 0x52, 0xca, 0x44, 0xd0, 0x96, 0xdc, 0xaf, 0x39, 0xa3, 0x81, 0x8b,
	0x7f, 0x0f, 0xbd, 0x57, 0x8b, 0xf3, 0x5f, 0x5d, 0x51, 0xa6, 0x2e, 0xbf, 0x4c, 0x59, 0x42, 0xf3,
	0x2c, 0x4f, 0x99, 0x50, 0x10, 0xf5, 0x49, 0x95, 0x25, 0x6b, 0xeb, 0x37, 0xf4, 0x5a, 0xa1, 0x32,
	0x24, 0xf2, 0x53, 0x9e, 0x99, 0xd3, 0x5c, 0xa4, 0x97, 0x69, 0x14, 0x0a, 0x8d, 0xce, 0x90, 0x54,
	0x59, 0xf8, 0x25, 0x0c, 0x5e, 0x1f, 0x2d, 0xce, 0x72, 0x1a, 0xae, 0x2f, 0x56, 0x14, 0x6d, 0x83,
	0x7f, 0x1a, 0xfe, 0x81, 0xe7, 0xca, 0xbc, 0x4f, 0x34, 0xa1, 0xb8, 0x29, 0xe3, 0xba, 0x3d, 0x24,
	0x57, 0x12, 0x92, 0x7b, 0x16, 0x8a, 0x68, 0xa9, 0xcc, 0xfa, 0x44, 0x13, 0xf8, 0x7b, 0x0f, 0xba,
	0xa7, 0xb4, 0x28, 0xc2, 0x84, 0xaa, 0x2c, 0xc5, 0xd3, 0xbe, 0xc9, 0x52, 0x8c, 0x1e, 0x41, 0x67,
	0x99, 0xc6, 0x31, 0x65, 0xd3, 0xef, 0x25, 0x76, 0x3d, 0x62, 0x48, 0xf4, 0x18, 0x3c, 0x71, 0x9d,
	0x51, 0x93, 0xf7, 0x2d, 0x93, 0x77, 0x63, 0xe6, 0xe0, 0xd5, 0x75, 0x46, 0x89, 0x52, 0xf8, 0xe1,
	0x3e, 0xd5, 0xfd, 0xe6, 0x96, 0xfd, 0xb6, 0x0d, 0x1e, 0xe3, 0x8c, 0xaa, 0x0a, 0xe8, 0x9d, 0xb4,
	0x88, 0xa2, 0x10, 0x02, 0x57, 0x62, 0xa8, 0xda, 0xf2, 0xa4, 0x45, 0x24, 0x81, 0x3e, 0x02, 0x77,
	0xc5, 0x13, 0x95, 0xf3, 0xc1, 0x0c, 0x8c, 0xe5, 0x05, 0x4f, 0xa4, 0x7c, 0xc5, 0x13, 0xf4, 0x4b,
	0x18, 0xe9, 0x91, 0x31, 0xe7, 0xeb, 0x75, 0xc8, 0x62, 0x95, 0xfe, 0xc1, 0x6c, 0xdb, 0x68, 0x1e,
	0x57, 0x65, 0x27, 0x2d, 0x52, 0x57, 0x46, 0x8f, 0xa1, 0xa3, 0x19, 0xaa, 0x22, 0x06, 0xb3, 0x51,
	0xed, 0xd8, 0x49, 0x8b, 0x18, 0x31, 0x7a, 0x06, 0xb0, 0xa6, 0xeb, 0x0b, 0x9a, 0x17, 0xcb, 0x34,
	0x9b, 0x82, 0x02, 0x64, 0xda, 0x00, 0x44, 0xd6, 0x8c, 0x2a, 0x8a, 0x93, 0x16, 0xa9, 0x68, 0xa3,
	0x27, 0xd0, 0x0f, 0x37, 0x62, 0xc9, 0x73, 0x39, 0x1a, 0x06, 0xea, 0x9e, 0x89, 0x39, 0x6a, 0xcb,
	0xe8, 0xa4, 0x45, 0x6e, 0x74, 0xf0, 0x27, 0xd0, 0x2f, 0x6d, 0xc9, 0x12, 0xfc, 0x35, 0x4f, 0x19,
	0x8d, 0x83, 0x16, 0x1a, 0x42, 0xef, 0x98, 0x66, 0x61, 0x2e, 0x68, 0x1c, 0x38, 0xf8, 0xcf, 0x0e,
	0x78, 0x32, 0x09, 0x68, 0x04, 0x7d, 0x89, 0xb5, 0xd2, 0xd7, 0x5a, 0x0b, 0x9e, 0x68, 0xca, 0x41,
	0x3b, 0x80, 0x6a, 0x20, 0x68, 0x7e, 0x1b, 0x4d, 0x60, 0xa0, 0xf9, 0x9a, 0xe1, 0xa2, 0x2d, 0x98,
	0x48, 0x2b, 0xc5, 0x57, 0x7c, 0x63, 0xb5, 0x3c, 0xf4, 0x08, 0xb6, 0x14, 0x73, 0xce, 0xd7, 0xd9,
	0x8a, 0x0a, 0x6a, 0x04, 0x3e, 0x1a, 0x03, 0xbc, 0x5a, 0x9c, 0xcf, 0x8f, 0x34, 0xdd, 0x79, 0xde,
	0x05, 0x5f, 0x7d, 0xe2, 0xa7, 0xe0, 0xbe, 0x3e, 0x5a, 0xa0, 0x9f, 0x41, 0x6f, 0xad, 0x71, 0x91,
	0x73, 0xc3, 0xdd, 0x1f, 0xcc, 0xc6, 0x75, 0xb8, 0x48, 0x29, 0xc7, 0xff, 0x70, 0x60, 0xa4, 0x7d,
	0x79, 0x99, 0xc9, 0xd1, 0x5d, 0xc8, 0x0e, 0x89, 0x38, 0x8b, 0x36, 0xb2, 0x85, 0x23, 0xdd, 0x3b,
	0x2e, 0xa9, 0xb2, 0xe4, 0x18, 0x11, 0xe9, 0x9a, 0xf2, 0x8d, 0x30, 0x65, 0x65, 0x49, 0xf4, 0x53,
	0x18, 0xa7, 0x09, 0xe3, 0x39, 0xfd, 0x2a, 0x4c, 0x57, 0x9b, 0x9c, 0x16, 0xba, 0xca, 0x48, 0x83,
	0x8b, 0x3e, 0x83, 0x07, 0x45, 0xba, 0xa2, 0x2c, 0xa2, 0xfa, 0xee, 0x05, 0x4f, 0xf4, 0x4a, 0xe8,
	0x91, 0xdb, 0x02, 0xfc, 0xa7, 0xb6, 0xf5, 0xd1, 0xd6, 0xce, 0x2f, 0xa0, 0x1b, 0x99, 0x9a, 0xd3,
	0x0d, 0xf2, 0xe1, 0x5d, 0x35, 0x77, 0x60, 0xfe, 0x12, 0xab, 0x8c, 0xf6, 0xa1, 0x1b, 0xea, 0x1d,
	0x68, 0xfa, 0xc5, 0x02, 0x63, 0x36, 0x23, 0xb1, 0xe2, 0xfa, 0x0e, 0x72, 0x1b, 0x3b, 0x08, 0x1d,
	0x40, 0x97, 0x6b, 0xb8, 0x94, 0xd7, 0xcd, 0x9a, 0x37, 0x50, 0x12, 0xab, 0x84, 0xe7, 0xd0, 0xb5,
	0xae, 0xf7, 0xc1, 0x7f, 0x4e, 0x93, 0x94, 0x99, 0x09, 0x17, 0xb2, 0x88, 0xae, 0x02, 0x47, 0x4e,
	0xb8, 0x63, 0x39, 0xe1, 0xda, 0x92, 0x2b, 0x71, 0xa2, 0x71, 0xe0, 0xa2, 0x01, 0x74, 0x09, 0x2d,
	0x44, 0x98, 0x8b, 0xc0, 0xc3, 0xff, 0x72, 0xa0, 0xa3, 0xed, 0xa3, 0x4f, 0xc1, 0x2f, 0x44, 0x98,
	0x34, 0xc7, 0x83, 0x96, 0xca, 0xc5, 0x90, 0x50, 0xa2, 0x35, 0xde, 0x21, 0xe4, 0x4a, 0x50, 0xde,
	0x3d, 0x82, 0x92, 0xd3, 0x8e, 0xe6, 0x79, 0x09, 0x8f, 0x26, 0xf0, 0x53, 0x35, 0xc9, 0x13, 0x5a,
	0x89, 0xa3, 0x25, 0xbb, 0x44, 0x1b, 0x49, 0x59, 0x12, 0x38, 0x92, 0x2c, 0x8b, 0x3a, 0x68, 0xe3,
	0xbf, 0x3a, 0xb0, 0x5d, 0x4b, 0x1c, 0xa1, 0xdf, 0x6d, 0x68, 0x21, 0xaa, 0xbe, 0x3b, 0xf7, 0xf6,
	0xfd, 0x3e, 0x09, 0x41, 0x3f, 0x02, 0x5f, 0x0e, 0x47, 0x19, 0xa9, 0xdb, 0x1c, 0x9b, 0x5a, 0x82,
	0x1f, 0xc2, 0x56, 0xc3, 0xa9, 0x62, 0xb3, 0x12, 0xf8, 0x11, 0xb8, 0x0b, 0x9e, 0xc8, 0xcd, 0x22,
	0x67, 0xa3, 0xde, 0x39, 0xf2, 0x13, 0x1f, 0xc3, 0xf8, 0x77, 0xd9, 0x8a, 0x87, 0x71, 0xf9, 0x30,
	0xd9, 0x06, 0xff, 0xe2, 0x5a, 0x50, 0xbd, 0xbc, 0x3d, 0xa2, 0x89, 0x7a, 0x65, 0xb5, 0x9b, 0xaf,
	0x9b, 0xbf, 0x3b, 0x30, 0xd0, 0x66, 0xe6, 0xcb, 0x0d, 0xfb, 0x56, 0xae, 0x71, 0x69, 0xcb, 0x3c,
	0x6b, 0xd4, 0x77, 0xed, 0x75, 0xd5, 0x6e, 0xbc, 0xae, 0xec, 0x74, 0x77, 0x6b, 0xd3, 0xfd, 0x73,
	0x39, 0x11, 0xb4, 0x57, 0x26, 0xb7, 0x0f, 0x4d, 0xc4, 0x75, 0x97, 0x4f, 0x5a, 0xa4, 0x54, 0x7c,
	0xbe, 0x03, 0xdb, 0xda, 0xaf, 0x95, 0x72, 0xc5, 0xea, 0xe0, 0x67, 0x36, 0x50, 0x42, 0x8b, 0x8c,
	0xb3, 0x82, 0xde, 0x3f, 0x4f, 0x78, 0x0c, 0xc3, 0xd7, 0x72, 0x29, 0x9a, 0x0c, 0x63, 0x04, 0xc1,
	0x71, 0x5a, 0x64, 0x9a, 0xa5, 0xad, 0xe1, 0x11, 0x0c, 0x5e, 0xb0, 0x4b, 0x6e, 0x55, 0xfe, 0xe7,
	0xc0, 0x50, 0xd3, 0xe6, 0xb6, 0xcf, 0xc0, 0x5b, 0xf3, 0xd8, 0xd6, 0xbe, 0xdd, 0x04, 0x55, 0x95,
	0x83, 0x53, 0x1e, 0x53, 0xa2, 0xb4, 0xd0, 0x0c, 0xfa, 0xb1, 0x2d, 0x3d, 0xd3, 0x01, 0x77, 0x2e,
	0x28, 0x72, 0xa3, 0x86, 0x0e, 0xa1, 0xa7, 0x09, 0x1a, 0x2b, 0x20, 0xdf, 0x74, 0xa4, 0xd4, 0x42,
	0x3f, 0x86, 0xce, 0x8a, 0x86, 0x31, 0xcd, 0x0d, 0xbc, 0xb5, 0x82, 0x32, 0x22, 0xfc, 0x31, 0x78,
	0xd2, 0x31, 0xfd, 0xc6, 0x61, 0xf4, 0x56, 0x5f, 0xe0, 0x00, 0xc6, 0x73, 0xce, 0x18, 0x8d, 0x84,
	0x0d, 0xfe, 0x1b, 0x98, 0x94, 0x1c, 0x13, 0xfe, 0x0e, 0x74, 0x0a, 0x1a, 0xe5, 0x54, 0x98, 0x9a,
	0x30, 0x94, 0x74, 0xe1, 0xbb, 0x0d, 0xcf, 0x55, 0x4d, 0xdc, 0xaa, 0x69, 0x23, 0xc2, 0x13, 0x18,
	0xe9, 0xf7, 0xa2, 0xbd, 0xe0, 0x02, 0xc6, 0x96, 0x61, 0xec, 0xdb, 0x07, 0x85, 0xf3, 0xa6, 0x07,
	0xc5, 0x13, 0x18, 0xdc, 0xfc, 0x52, 0xb0, 0x1d, 0x54, 0xdf, 0xde, 0xa4, 0xaa, 0x81, 0x53, 0x3b,
	0xbe, 0xdf, 0xab, 0xaf, 0xdb, 0xf7, 0x19, 0xb4, 0x5f, 0xc0, 0xd8, 0x5e, 0x65, 0xc2, 0xf9, 0xa4,
	0x7c, 0x66, 0x38, 0x77, 0x3c, 0x33, 0xec, 0x23, 0x03, 0x3f, 0x80, 0xc9, 0xf9, 0x72, 0x23, 0x62,
	0xfe, 0x47, 0x56, 0xa9, 0xcd, 0x1b, 0x96, 0xa9, 0xcd, 0x09, 0x8c, 0xf4, 0xc8, 0xb6, 0x4a, 0x32,
	0x65, 0x86, 0x61, 0x54, 0x0e, 0x01, 0x16, 0x3c, 0xb1, 0xa1, 0xde, 0xe3, 0xa7, 0x16, 0x7e, 0x0c,
	0x03, 0x75, 0xc2, 0x78, 0x3c, 0x95, 0xcb, 0x8d, 0x09, 0xca, 0x6c, 0x86, 0x2d, 0x89, 0xbf, 0x84,
	0xc9, 0x4d, 0xb7, 0x68, 0xfb, 0xef, 0xb2, 0xeb, 0x03, 0x18, 0x5b, 0x80, 0x8d, 0xf7, 0x7f, 0x71,
	0x60, 0x52, 0xb2, 0xcc, 0xf5, 0x4f, 0xc0, 0x4b, 0xd9, 0x25, 0x37, 0xed, 0xf5, 0x41, 0x23, 0x33,
	0xb6, 0xc3, 0x54, 0xbb, 0x29, 0xc5, 0x0a, 0xc2, 0xed, 0xb7, 0x21, 0x8c, 0xc1, 0x93, 0x87, 0x2a,
	0xd5, 0x1f, 0xc0, 0xf0, 0x28, 0x12, 0xe9, 0x95, 0xd9, 0xf5, 0x81, 0x33, 0xfb, 0x6f, 0x1b, 0x3a,
	0xbf, 0x55, 0x95, 0x8a, 0xbe, 0x80, 0x8e, 0x9e, 0x32, 0x08, 0xd5, 0x46, 0x95, 0x9a, 0x45, 0xbb,
	0xf5, 0xf1, 0x55, 0x62, 0xdf, 0xda, 0x77, 0xd0, 0x21, 0xf8, 0x6a, 0xc4, 0x20, 0xbb, 0x15, 0xab,
	0x03, 0x67, 0xb7, 0x81, 0x0e, 0x6e, 0x1d, 0x3a, 0xe8, 0x4b, 0xe8, 0x59, 0x58, 0xd1, 0x8e, 0x75,
	0xbe, 0x8e, 0xf3, 0xee, 0xa3, 0x5b, 0x7c, 0x7b, 0x25, 0x9a, 0x97, 0x6b, 0xf9, 0x83, 0x3b, 0xa7,
	0x84, 0xb1, 0xb0, 0x7b, 0xb7, 0x50, 0x2d, 0x95, 0x16, 0x7a, 0x6a, 0xd0, 0x41, 0xb5, 0x71, 0xa6,
	0x4f, 0x6e, 0xdd, 0x31, 0xe2, 0x70, 0x4b, 0x22, 0xa4, 0x4b, 0x0f, 0xd9, 0xa6, 0xa8, 0x95, 0x66,
	0x89, 0x51, 0xa3, 0x3e, 0x5b, 0xb3, 0x7f, 0xb7, 0xc1, 0x3f, 0x92, 0x22, 0xf4, 0x4c, 0xbe, 0x4b,
	0xd4, 0x78, 0x41, 0xa5, 0x76, 0x6d, 0x00, 0xed, 0xee, 0x34, 0xd9, 0xe5, 0xf5, 0x3f, 0x37, 0x1e,
	0xdb, 0xcb, 0x6b, 0x73, 0xa5, 0xbc, 0xbc, 0x3e, 0x5c, 0xb4, 0xd7, 0x06, 0xad, 0x7a, 0x2b, 0x37,
	0x0f, 0xd6, 0xdb, 0xf8, 0x3d, 0xc2, 0x95, 0xe9, 0xb5, 0x7d, 0x5c, 0xa6, 0xb7, 0xd1, 0xeb, 0x65,
	0x7a, 0x6f, 0x35, 0xbc, 0xca, 0x8c, 0x7c, 0x85, 0xa2, 0x07, 0x37, 0x3f, 0x80, 0xec, 0x29, 0x54,
	0x65, 0xd9, 0x03, 0x87, 0xce, 0xec, 0x05, 0xf4, 0x5e, 0x5e, 0x14, 0x34, 0xbf, 0xa2, 0xf9, 0x7b,
	0x16, 0xd7, 0xec, 0x6b, 0xe8, 0x3f, 0xe7, 0x5c, 0x14, 0x22, 0x0f, 0x33, 0x99, 0x2e, 0xfb, 0x2f,
	0x9c, 0x87, 0xcd, 0xbe, 0xac, 0xa7, 0xab, 0xd1, 0xae, 0xb8, 0x75, 0xd1, 0x51, 0xff, 0x0d, 0xfa,
	0xfc, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0x80, 0x71, 0x64, 0x5f, 0x1c, 0x12, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QuorumClient is the client API for Quorum service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QuorumClient interface {
	Upload(ctx context.Context, opts ...grpc.CallOption) (Quorum_UploadClient, error)
	Watch(ctx context.Context, in *WatchRequest, opts ...grpc.CallOption) (Quorum_WatchClient, error)
	Dispatch(ctx context.Context, in *DispatchRequest, opts ...grpc.CallOption) (*DispatchResponse, error)
	Deploy(ctx context.Context, in *DeployCommandRequest, opts ...grpc.CallOption) (*DeployCommandResult, error)
	Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error)
	Cancel(ctx context.Context, in *CancelRequest, opts ...grpc.CallOption) (*CancelResponse, error)
}

type quorumClient struct {
	cc *grpc.ClientConn
}

func NewQuorumClient(cc *grpc.ClientConn) QuorumClient {
	return &quorumClient{cc}
}

func (c *quorumClient) Upload(ctx context.Context, opts ...grpc.CallOption) (Quorum_UploadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Quorum_serviceDesc.Streams[0], "/agent.Quorum/Upload", opts...)
	if err != nil {
		return nil, err
	}
	x := &quorumUploadClient{stream}
	return x, nil
}

type Quorum_UploadClient interface {
	Send(*UploadChunk) error
	CloseAndRecv() (*UploadResponse, error)
	grpc.ClientStream
}

type quorumUploadClient struct {
	grpc.ClientStream
}

func (x *quorumUploadClient) Send(m *UploadChunk) error {
	return x.ClientStream.SendMsg(m)
}

func (x *quorumUploadClient) CloseAndRecv() (*UploadResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(UploadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *quorumClient) Watch(ctx context.Context, in *WatchRequest, opts ...grpc.CallOption) (Quorum_WatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Quorum_serviceDesc.Streams[1], "/agent.Quorum/Watch", opts...)
	if err != nil {
		return nil, err
	}
	x := &quorumWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Quorum_WatchClient interface {
	Recv() (*Message, error)
	grpc.ClientStream
}

type quorumWatchClient struct {
	grpc.ClientStream
}

func (x *quorumWatchClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *quorumClient) Dispatch(ctx context.Context, in *DispatchRequest, opts ...grpc.CallOption) (*DispatchResponse, error) {
	out := new(DispatchResponse)
	err := c.cc.Invoke(ctx, "/agent.Quorum/Dispatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quorumClient) Deploy(ctx context.Context, in *DeployCommandRequest, opts ...grpc.CallOption) (*DeployCommandResult, error) {
	out := new(DeployCommandResult)
	err := c.cc.Invoke(ctx, "/agent.Quorum/Deploy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quorumClient) Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error) {
	out := new(InfoResponse)
	err := c.cc.Invoke(ctx, "/agent.Quorum/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quorumClient) Cancel(ctx context.Context, in *CancelRequest, opts ...grpc.CallOption) (*CancelResponse, error) {
	out := new(CancelResponse)
	err := c.cc.Invoke(ctx, "/agent.Quorum/Cancel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QuorumServer is the server API for Quorum service.
type QuorumServer interface {
	Upload(Quorum_UploadServer) error
	Watch(*WatchRequest, Quorum_WatchServer) error
	Dispatch(context.Context, *DispatchRequest) (*DispatchResponse, error)
	Deploy(context.Context, *DeployCommandRequest) (*DeployCommandResult, error)
	Info(context.Context, *InfoRequest) (*InfoResponse, error)
	Cancel(context.Context, *CancelRequest) (*CancelResponse, error)
}

func RegisterQuorumServer(s *grpc.Server, srv QuorumServer) {
	s.RegisterService(&_Quorum_serviceDesc, srv)
}

func _Quorum_Upload_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(QuorumServer).Upload(&quorumUploadServer{stream})
}

type Quorum_UploadServer interface {
	SendAndClose(*UploadResponse) error
	Recv() (*UploadChunk, error)
	grpc.ServerStream
}

type quorumUploadServer struct {
	grpc.ServerStream
}

func (x *quorumUploadServer) SendAndClose(m *UploadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *quorumUploadServer) Recv() (*UploadChunk, error) {
	m := new(UploadChunk)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Quorum_Watch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(QuorumServer).Watch(m, &quorumWatchServer{stream})
}

type Quorum_WatchServer interface {
	Send(*Message) error
	grpc.ServerStream
}

type quorumWatchServer struct {
	grpc.ServerStream
}

func (x *quorumWatchServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

func _Quorum_Dispatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DispatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuorumServer).Dispatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/agent.Quorum/Dispatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuorumServer).Dispatch(ctx, req.(*DispatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Quorum_Deploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeployCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuorumServer).Deploy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/agent.Quorum/Deploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuorumServer).Deploy(ctx, req.(*DeployCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Quorum_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuorumServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/agent.Quorum/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuorumServer).Info(ctx, req.(*InfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Quorum_Cancel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuorumServer).Cancel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/agent.Quorum/Cancel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuorumServer).Cancel(ctx, req.(*CancelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Quorum_serviceDesc = grpc.ServiceDesc{
	ServiceName: "agent.Quorum",
	HandlerType: (*QuorumServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Dispatch",
			Handler:    _Quorum_Dispatch_Handler,
		},
		{
			MethodName: "Deploy",
			Handler:    _Quorum_Deploy_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _Quorum_Info_Handler,
		},
		{
			MethodName: "Cancel",
			Handler:    _Quorum_Cancel_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Upload",
			Handler:       _Quorum_Upload_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "Watch",
			Handler:       _Quorum_Watch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "agent.proto",
}

// AgentClient is the client API for Agent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgentClient interface {
	Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error)
	Info(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	Deploy(ctx context.Context, in *DeployRequest, opts ...grpc.CallOption) (*DeployResponse, error)
	Cancel(ctx context.Context, in *CancelRequest, opts ...grpc.CallOption) (*CancelResponse, error)
	Shutdown(ctx context.Context, in *ShutdownRequest, opts ...grpc.CallOption) (*ShutdownResponse, error)
	Logs(ctx context.Context, in *LogRequest, opts ...grpc.CallOption) (Agent_LogsClient, error)
}

type agentClient struct {
	cc *grpc.ClientConn
}

func NewAgentClient(cc *grpc.ClientConn) AgentClient {
	return &agentClient{cc}
}

func (c *agentClient) Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error) {
	out := new(ConnectResponse)
	err := c.cc.Invoke(ctx, "/agent.Agent/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Info(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/agent.Agent/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Deploy(ctx context.Context, in *DeployRequest, opts ...grpc.CallOption) (*DeployResponse, error) {
	out := new(DeployResponse)
	err := c.cc.Invoke(ctx, "/agent.Agent/Deploy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Cancel(ctx context.Context, in *CancelRequest, opts ...grpc.CallOption) (*CancelResponse, error) {
	out := new(CancelResponse)
	err := c.cc.Invoke(ctx, "/agent.Agent/Cancel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Shutdown(ctx context.Context, in *ShutdownRequest, opts ...grpc.CallOption) (*ShutdownResponse, error) {
	out := new(ShutdownResponse)
	err := c.cc.Invoke(ctx, "/agent.Agent/Shutdown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Logs(ctx context.Context, in *LogRequest, opts ...grpc.CallOption) (Agent_LogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[0], "/agent.Agent/Logs", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Agent_LogsClient interface {
	Recv() (*LogResponse, error)
	grpc.ClientStream
}

type agentLogsClient struct {
	grpc.ClientStream
}

func (x *agentLogsClient) Recv() (*LogResponse, error) {
	m := new(LogResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AgentServer is the server API for Agent service.
type AgentServer interface {
	Connect(context.Context, *ConnectRequest) (*ConnectResponse, error)
	Info(context.Context, *StatusRequest) (*StatusResponse, error)
	Deploy(context.Context, *DeployRequest) (*DeployResponse, error)
	Cancel(context.Context, *CancelRequest) (*CancelResponse, error)
	Shutdown(context.Context, *ShutdownRequest) (*ShutdownResponse, error)
	Logs(*LogRequest, Agent_LogsServer) error
}

func RegisterAgentServer(s *grpc.Server, srv AgentServer) {
	s.RegisterService(&_Agent_serviceDesc, srv)
}

func _Agent_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/agent.Agent/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Connect(ctx, req.(*ConnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/agent.Agent/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Info(ctx, req.(*StatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Deploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeployRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Deploy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/agent.Agent/Deploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Deploy(ctx, req.(*DeployRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Cancel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Cancel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/agent.Agent/Cancel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Cancel(ctx, req.(*CancelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Shutdown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShutdownRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Shutdown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/agent.Agent/Shutdown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Shutdown(ctx, req.(*ShutdownRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Logs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(LogRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AgentServer).Logs(m, &agentLogsServer{stream})
}

type Agent_LogsServer interface {
	Send(*LogResponse) error
	grpc.ServerStream
}

type agentLogsServer struct {
	grpc.ServerStream
}

func (x *agentLogsServer) Send(m *LogResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Agent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "agent.Agent",
	HandlerType: (*AgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Connect",
			Handler:    _Agent_Connect_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _Agent_Info_Handler,
		},
		{
			MethodName: "Deploy",
			Handler:    _Agent_Deploy_Handler,
		},
		{
			MethodName: "Cancel",
			Handler:    _Agent_Cancel_Handler,
		},
		{
			MethodName: "Shutdown",
			Handler:    _Agent_Shutdown_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Logs",
			Handler:       _Agent_Logs_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "agent.proto",
}

// ObserverClient is the client API for Observer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ObserverClient interface {
	Dispatch(ctx context.Context, in *DispatchRequest, opts ...grpc.CallOption) (*DispatchResponse, error)
}

type observerClient struct {
	cc *grpc.ClientConn
}

func NewObserverClient(cc *grpc.ClientConn) ObserverClient {
	return &observerClient{cc}
}

func (c *observerClient) Dispatch(ctx context.Context, in *DispatchRequest, opts ...grpc.CallOption) (*DispatchResponse, error) {
	out := new(DispatchResponse)
	err := c.cc.Invoke(ctx, "/agent.Observer/Dispatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ObserverServer is the server API for Observer service.
type ObserverServer interface {
	Dispatch(context.Context, *DispatchRequest) (*DispatchResponse, error)
}

func RegisterObserverServer(s *grpc.Server, srv ObserverServer) {
	s.RegisterService(&_Observer_serviceDesc, srv)
}

func _Observer_Dispatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DispatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ObserverServer).Dispatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/agent.Observer/Dispatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ObserverServer).Dispatch(ctx, req.(*DispatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Observer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "agent.Observer",
	HandlerType: (*ObserverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Dispatch",
			Handler:    _Observer_Dispatch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "agent.proto",
}

// BootstrapClient is the client API for Bootstrap service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BootstrapClient interface {
	Archive(ctx context.Context, in *ArchiveRequest, opts ...grpc.CallOption) (*ArchiveResponse, error)
}

type bootstrapClient struct {
	cc *grpc.ClientConn
}

func NewBootstrapClient(cc *grpc.ClientConn) BootstrapClient {
	return &bootstrapClient{cc}
}

func (c *bootstrapClient) Archive(ctx context.Context, in *ArchiveRequest, opts ...grpc.CallOption) (*ArchiveResponse, error) {
	out := new(ArchiveResponse)
	err := c.cc.Invoke(ctx, "/agent.Bootstrap/Archive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BootstrapServer is the server API for Bootstrap service.
type BootstrapServer interface {
	Archive(context.Context, *ArchiveRequest) (*ArchiveResponse, error)
}

func RegisterBootstrapServer(s *grpc.Server, srv BootstrapServer) {
	s.RegisterService(&_Bootstrap_serviceDesc, srv)
}

func _Bootstrap_Archive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArchiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BootstrapServer).Archive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/agent.Bootstrap/Archive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BootstrapServer).Archive(ctx, req.(*ArchiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bootstrap_serviceDesc = grpc.ServiceDesc{
	ServiceName: "agent.Bootstrap",
	HandlerType: (*BootstrapServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Archive",
			Handler:    _Bootstrap_Archive_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "agent.proto",
}
