// Code generated by protoc-gen-go. DO NOT EDIT.
// source: configuration.proto

package quorum

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Snapshot allows for a strict check for missing data and for server side filtering.
type Snapshot struct {
	Checksum             []byte   `protobuf:"bytes,1,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Bloom                []byte   `protobuf:"bytes,2,opt,name=bloom,proto3" json:"bloom,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Snapshot) Reset()         { *m = Snapshot{} }
func (m *Snapshot) String() string { return proto.CompactTextString(m) }
func (*Snapshot) ProtoMessage()    {}
func (*Snapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_415c9e57263f32ab, []int{0}
}

func (m *Snapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Snapshot.Unmarshal(m, b)
}
func (m *Snapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Snapshot.Marshal(b, m, deterministic)
}
func (m *Snapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Snapshot.Merge(m, src)
}
func (m *Snapshot) XXX_Size() int {
	return xxx_messageInfo_Snapshot.Size(m)
}
func (m *Snapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_Snapshot.DiscardUnknown(m)
}

var xxx_messageInfo_Snapshot proto.InternalMessageInfo

func (m *Snapshot) GetChecksum() []byte {
	if m != nil {
		return m.Checksum
	}
	return nil
}

func (m *Snapshot) GetBloom() []byte {
	if m != nil {
		return m.Bloom
	}
	return nil
}

// request configuration based on checksums and bloomfilters.
type Checksum struct {
	Authority            []byte    `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	Authorizations       *Snapshot `protobuf:"bytes,2,opt,name=authorizations,proto3" json:"authorizations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Checksum) Reset()         { *m = Checksum{} }
func (m *Checksum) String() string { return proto.CompactTextString(m) }
func (*Checksum) ProtoMessage()    {}
func (*Checksum) Descriptor() ([]byte, []int) {
	return fileDescriptor_415c9e57263f32ab, []int{1}
}

func (m *Checksum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Checksum.Unmarshal(m, b)
}
func (m *Checksum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Checksum.Marshal(b, m, deterministic)
}
func (m *Checksum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Checksum.Merge(m, src)
}
func (m *Checksum) XXX_Size() int {
	return xxx_messageInfo_Checksum.Size(m)
}
func (m *Checksum) XXX_DiscardUnknown() {
	xxx_messageInfo_Checksum.DiscardUnknown(m)
}

var xxx_messageInfo_Checksum proto.InternalMessageInfo

func (m *Checksum) GetAuthority() []byte {
	if m != nil {
		return m.Authority
	}
	return nil
}

func (m *Checksum) GetAuthorizations() *Snapshot {
	if m != nil {
		return m.Authorizations
	}
	return nil
}

// stream configuration data to an agent.
type Config struct {
	// Types that are valid to be assigned to Type:
	//	*Config_Checksum
	//	*Config_Authority
	//	*Config_Authorizations
	Type                 isConfig_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_415c9e57263f32ab, []int{2}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

type isConfig_Type interface {
	isConfig_Type()
}

type Config_Checksum struct {
	Checksum *Checksum `protobuf:"bytes,1,opt,name=checksum,proto3,oneof"`
}

type Config_Authority struct {
	Authority []byte `protobuf:"bytes,2,opt,name=authority,proto3,oneof"`
}

type Config_Authorizations struct {
	Authorizations []byte `protobuf:"bytes,3,opt,name=authorizations,proto3,oneof"`
}

func (*Config_Checksum) isConfig_Type() {}

func (*Config_Authority) isConfig_Type() {}

func (*Config_Authorizations) isConfig_Type() {}

func (m *Config) GetType() isConfig_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Config) GetChecksum() *Checksum {
	if x, ok := m.GetType().(*Config_Checksum); ok {
		return x.Checksum
	}
	return nil
}

func (m *Config) GetAuthority() []byte {
	if x, ok := m.GetType().(*Config_Authority); ok {
		return x.Authority
	}
	return nil
}

func (m *Config) GetAuthorizations() []byte {
	if x, ok := m.GetType().(*Config_Authorizations); ok {
		return x.Authorizations
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Config) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Config_Checksum)(nil),
		(*Config_Authority)(nil),
		(*Config_Authorizations)(nil),
	}
}

func init() {
	proto.RegisterType((*Snapshot)(nil), "quorum.Snapshot")
	proto.RegisterType((*Checksum)(nil), "quorum.Checksum")
	proto.RegisterType((*Config)(nil), "quorum.Config")
}

func init() { proto.RegisterFile("configuration.proto", fileDescriptor_415c9e57263f32ab) }

var fileDescriptor_415c9e57263f32ab = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0xce, 0xcf, 0x4b,
	0xcb, 0x4c, 0x2f, 0x2d, 0x4a, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0x2b, 0x2c, 0xcd, 0x2f, 0x2a, 0xcd, 0x55, 0xb2, 0xe1, 0xe2, 0x08, 0xce, 0x4b, 0x2c, 0x28,
	0xce, 0xc8, 0x2f, 0x11, 0x92, 0xe2, 0xe2, 0x48, 0xce, 0x48, 0x4d, 0xce, 0x2e, 0x2e, 0xcd, 0x95,
	0x60, 0x54, 0x60, 0xd4, 0xe0, 0x09, 0x82, 0xf3, 0x85, 0x44, 0xb8, 0x58, 0x93, 0x72, 0xf2, 0xf3,
	0x73, 0x25, 0x98, 0xc0, 0x12, 0x10, 0x8e, 0x52, 0x12, 0x17, 0x87, 0x33, 0x4c, 0x85, 0x0c, 0x17,
	0x67, 0x62, 0x69, 0x49, 0x46, 0x7e, 0x51, 0x66, 0x49, 0x25, 0x54, 0x3b, 0x42, 0x40, 0xc8, 0x82,
	0x8b, 0x0f, 0xca, 0xa9, 0x02, 0x3b, 0xa3, 0x18, 0x6c, 0x10, 0xb7, 0x91, 0x80, 0x1e, 0xc4, 0x21,
	0x7a, 0x30, 0x57, 0x04, 0xa1, 0xa9, 0x53, 0xea, 0x62, 0xe4, 0x62, 0x73, 0x06, 0xfb, 0x40, 0x48,
	0x0f, 0xcd, 0x81, 0x48, 0xda, 0x61, 0xce, 0xf0, 0x60, 0x40, 0x72, 0xb4, 0x1c, 0xb2, 0x93, 0xc0,
	0x0e, 0xf7, 0x60, 0x40, 0x76, 0x94, 0x06, 0x86, 0xa3, 0x98, 0xa1, 0x8a, 0xd0, 0xc4, 0x9d, 0xd8,
	0xb8, 0x58, 0x4a, 0x2a, 0x0b, 0x52, 0x8d, 0xec, 0xb8, 0x78, 0x9d, 0x91, 0x43, 0x53, 0x48, 0x97,
	0x8b, 0x15, 0x6c, 0xb5, 0x10, 0x86, 0x4b, 0xa4, 0xf8, 0xe0, 0x22, 0x60, 0x1d, 0x4a, 0x0c, 0x06,
	0x8c, 0x49, 0x6c, 0xe0, 0xd0, 0x37, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x46, 0x85, 0x68, 0xb4,
	0x94, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConfigurationClient is the client API for Configuration service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigurationClient interface {
	Check(ctx context.Context, in *Checksum, opts ...grpc.CallOption) (Configuration_CheckClient, error)
}

type configurationClient struct {
	cc *grpc.ClientConn
}

func NewConfigurationClient(cc *grpc.ClientConn) ConfigurationClient {
	return &configurationClient{cc}
}

func (c *configurationClient) Check(ctx context.Context, in *Checksum, opts ...grpc.CallOption) (Configuration_CheckClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Configuration_serviceDesc.Streams[0], "/quorum.Configuration/Check", opts...)
	if err != nil {
		return nil, err
	}
	x := &configurationCheckClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Configuration_CheckClient interface {
	Recv() (*Config, error)
	grpc.ClientStream
}

type configurationCheckClient struct {
	grpc.ClientStream
}

func (x *configurationCheckClient) Recv() (*Config, error) {
	m := new(Config)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ConfigurationServer is the server API for Configuration service.
type ConfigurationServer interface {
	Check(*Checksum, Configuration_CheckServer) error
}

func RegisterConfigurationServer(s *grpc.Server, srv ConfigurationServer) {
	s.RegisterService(&_Configuration_serviceDesc, srv)
}

func _Configuration_Check_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Checksum)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ConfigurationServer).Check(m, &configurationCheckServer{stream})
}

type Configuration_CheckServer interface {
	Send(*Config) error
	grpc.ServerStream
}

type configurationCheckServer struct {
	grpc.ServerStream
}

func (x *configurationCheckServer) Send(m *Config) error {
	return x.ServerStream.SendMsg(m)
}

var _Configuration_serviceDesc = grpc.ServiceDesc{
	ServiceName: "quorum.Configuration",
	HandlerType: (*ConfigurationServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Check",
			Handler:       _Configuration_Check_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "configuration.proto",
}
